{"ast":null,"code":"import classNames from\"classnames\";import{forwardRef}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const SIZE=[\"m\",\"l\"];export const VuiTextInput=/*#__PURE__*/forwardRef((_ref,ref)=>{let{className,id,placeholder,value,size=\"m\",onChange,fullWidth,onSubmit,isInvalid,name,autoComplete,autoFocus,...rest}=_ref;const classes=classNames(\"vuiInput\",\"vuiInput--text\",`vuiInput--${size}`,{\"vuiInput-isInvalid\":isInvalid,\"vuiInput--fullWidth\":fullWidth},className);const handleKeyDown=e=>{if(e.key===\"Enter\"){e.preventDefault();e.stopPropagation();onSubmit===null||onSubmit===void 0?void 0:onSubmit();}};return/*#__PURE__*/_jsx(\"input\",{autoComplete:autoComplete?\"on\":\"off\",autoFocus:autoFocus,ref:ref,type:\"text\",className:classes,id:id,name:name,placeholder:placeholder,value:value,onChange:onChange,onKeyDown:handleKeyDown,...rest});});","map":{"version":3,"names":["classNames","forwardRef","jsx","_jsx","SIZE","VuiTextInput","_ref","ref","className","id","placeholder","value","size","onChange","fullWidth","onSubmit","isInvalid","name","autoComplete","autoFocus","rest","classes","handleKeyDown","e","key","preventDefault","stopPropagation","type","onKeyDown"],"sources":["/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/components/form/input/TextInput.tsx"],"sourcesContent":["import classNames from \"classnames\";\nimport { forwardRef } from \"react\";\n\nconst SIZE = [\"m\", \"l\"] as const;\n\ntype Props = {\n  className?: string;\n  id?: string;\n  name?: string;\n  isInvalid?: boolean;\n  value?: string;\n  size?: (typeof SIZE)[number];\n  fullWidth?: boolean;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  onSubmit?: () => void;\n  maxLength?: number;\n  autoComplete?: boolean;\n  autoFocus?: boolean;\n};\n\nexport const VuiTextInput = forwardRef<HTMLInputElement | null, Props>(\n  (\n    {\n      className,\n      id,\n      placeholder,\n      value,\n      size = \"m\",\n      onChange,\n      fullWidth,\n      onSubmit,\n      isInvalid,\n      name,\n      autoComplete,\n      autoFocus,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const classes = classNames(\n      \"vuiInput\",\n      \"vuiInput--text\",\n      `vuiInput--${size}`,\n      {\n        \"vuiInput-isInvalid\": isInvalid,\n        \"vuiInput--fullWidth\": fullWidth\n      },\n      className\n    );\n\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n      if (e.key === \"Enter\") {\n        e.preventDefault();\n        e.stopPropagation();\n        onSubmit?.();\n      }\n    };\n\n    return (\n      <input\n        autoComplete={autoComplete ? \"on\" : \"off\"}\n        autoFocus={autoFocus}\n        ref={ref}\n        type=\"text\"\n        className={classes}\n        id={id}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onKeyDown={handleKeyDown}\n        {...rest}\n      />\n    );\n  }\n);\n"],"mappings":"AAAA,MAAO,CAAAA,UAAU,KAAM,YAAY,CACnC,OAASC,UAAU,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnC,KAAM,CAAAC,IAAI,CAAG,CAAC,GAAG,CAAE,GAAG,CAAU,CAkBhC,MAAO,MAAM,CAAAC,YAAY,cAAGJ,UAAU,CACpC,CAAAK,IAAA,CAgBEC,GAAG,GACA,IAhBH,CACEC,SAAS,CACTC,EAAE,CACFC,WAAW,CACXC,KAAK,CACLC,IAAI,CAAG,GAAG,CACVC,QAAQ,CACRC,SAAS,CACTC,QAAQ,CACRC,SAAS,CACTC,IAAI,CACJC,YAAY,CACZC,SAAS,CACT,GAAGC,IACE,CAAC,CAAAd,IAAA,CAGR,KAAM,CAAAe,OAAO,CAAGrB,UAAU,CACxB,UAAU,CACV,gBAAgB,CAChB,aAAaY,IAAI,EAAE,CACnB,CACE,oBAAoB,CAAEI,SAAS,CAC/B,qBAAqB,CAAEF,SACzB,CAAC,CACDN,SACF,CAAC,CAED,KAAM,CAAAc,aAAa,CAAIC,CAAsB,EAAK,CAChD,GAAIA,CAAC,CAACC,GAAG,GAAK,OAAO,CAAE,CACrBD,CAAC,CAACE,cAAc,CAAC,CAAC,CAClBF,CAAC,CAACG,eAAe,CAAC,CAAC,CACnBX,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAG,CAAC,CACd,CACF,CAAC,CAED,mBACEZ,IAAA,UACEe,YAAY,CAAEA,YAAY,CAAG,IAAI,CAAG,KAAM,CAC1CC,SAAS,CAAEA,SAAU,CACrBZ,GAAG,CAAEA,GAAI,CACToB,IAAI,CAAC,MAAM,CACXnB,SAAS,CAAEa,OAAQ,CACnBZ,EAAE,CAAEA,EAAG,CACPQ,IAAI,CAAEA,IAAK,CACXP,WAAW,CAAEA,WAAY,CACzBC,KAAK,CAAEA,KAAM,CACbE,QAAQ,CAAEA,QAAS,CACnBe,SAAS,CAAEN,aAAc,IACrBF,IAAI,CACT,CAAC,CAEN,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}