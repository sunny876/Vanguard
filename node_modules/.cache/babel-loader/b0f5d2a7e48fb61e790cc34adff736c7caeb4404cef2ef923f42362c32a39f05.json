{"ast":null,"code":"import classNames from\"classnames\";import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";export const VuiTab=_ref=>{let{children,className,to,onClick,isActive=false,...rest}=_ref;const classes=classNames(className,\"vuiTab\",{\"vuiTab-isActive\":isActive});if(to){return/*#__PURE__*/_jsx(Link,{className:classes,to:to,onClick:onClick,...rest,children:children});}return/*#__PURE__*/_jsx(\"button\",{className:classes,onClick:onClick,...rest,children:children});};","map":{"version":3,"names":["classNames","Link","jsx","_jsx","VuiTab","_ref","children","className","to","onClick","isActive","rest","classes"],"sources":["/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/components/tabs/Tab.tsx"],"sourcesContent":["import classNames from \"classnames\";\nimport { Link, To } from \"react-router-dom\";\n\ntype Props = {\n  children: React.ReactNode;\n  className?: string;\n  to?: To;\n  onClick?: () => void;\n  isActive?: boolean;\n};\n\nexport const VuiTab = ({ children, className, to, onClick, isActive = false, ...rest }: Props) => {\n  const classes = classNames(className, \"vuiTab\", {\n    \"vuiTab-isActive\": isActive\n  });\n\n  if (to) {\n    return (\n      <Link className={classes} to={to} onClick={onClick} {...rest}>\n        {children}\n      </Link>\n    );\n  }\n\n  return (\n    <button className={classes} onClick={onClick} {...rest}>\n      {children}\n    </button>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,UAAU,KAAM,YAAY,CACnC,OAASC,IAAI,KAAY,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAU5C,MAAO,MAAM,CAAAC,MAAM,CAAGC,IAAA,EAA4E,IAA3E,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,EAAE,CAAEC,OAAO,CAAEC,QAAQ,CAAG,KAAK,CAAE,GAAGC,IAAY,CAAC,CAAAN,IAAA,CAC3F,KAAM,CAAAO,OAAO,CAAGZ,UAAU,CAACO,SAAS,CAAE,QAAQ,CAAE,CAC9C,iBAAiB,CAAEG,QACrB,CAAC,CAAC,CAEF,GAAIF,EAAE,CAAE,CACN,mBACEL,IAAA,CAACF,IAAI,EAACM,SAAS,CAAEK,OAAQ,CAACJ,EAAE,CAAEA,EAAG,CAACC,OAAO,CAAEA,OAAQ,IAAKE,IAAI,CAAAL,QAAA,CACzDA,QAAQ,CACL,CAAC,CAEX,CAEA,mBACEH,IAAA,WAAQI,SAAS,CAAEK,OAAQ,CAACH,OAAO,CAAEA,OAAQ,IAAKE,IAAI,CAAAL,QAAA,CACnDA,QAAQ,CACH,CAAC,CAEb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}