{"ast":null,"code":"export const extractCitations=summary=>{// Match citations.\n// const regex = /\\[(\\d+)\\]/g;\nconst regex=/\\[(\\d+(,*\\s*\\d*)*)\\]/g;const citations=[];let match;let lastIndex=0;// Parse all cited content.\nwhile((match=regex.exec(summary))!==null){const index=match.index;const reference=match[1];const text=summary.slice(lastIndex,index);// Handle citations that are in the form of [1, 2, 3] or [1,2,3]\n// so normalize to the latter.\ncitations.push({text,references:reference.replace(/\\s/g,\"\").split(\",\")});lastIndex=index+match[0].length;}// Add the remaining content after the last citation.\nconst text=summary.slice(lastIndex);if(text.length>0){citations.push({text});}return citations;};","map":{"version":3,"names":["extractCitations","summary","regex","citations","match","lastIndex","exec","index","reference","text","slice","push","references","replace","split","length"],"sources":["/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/utils/citations/extractCitations.ts"],"sourcesContent":["export const extractCitations = (summary: string) => {\n  // Match citations.\n  // const regex = /\\[(\\d+)\\]/g;\n  const regex = /\\[(\\d+(,*\\s*\\d*)*)\\]/g;\n\n  const citations: Array<{ text: string; references?: string[] }> = [];\n\n  let match;\n  let lastIndex = 0;\n\n  // Parse all cited content.\n  while ((match = regex.exec(summary)) !== null) {\n    const index = match.index;\n    const reference = match[1];\n    const text = summary.slice(lastIndex, index);\n    // Handle citations that are in the form of [1, 2, 3] or [1,2,3]\n    // so normalize to the latter.\n    citations.push({\n      text,\n      references: reference.replace(/\\s/g, \"\").split(\",\")\n    });\n    lastIndex = index + match[0].length;\n  }\n\n  // Add the remaining content after the last citation.\n  const text = summary.slice(lastIndex);\n  if (text.length > 0) {\n    citations.push({ text });\n  }\n\n  return citations;\n};\n"],"mappings":"AAAA,MAAO,MAAM,CAAAA,gBAAgB,CAAIC,OAAe,EAAK,CACnD;AACA;AACA,KAAM,CAAAC,KAAK,CAAG,uBAAuB,CAErC,KAAM,CAAAC,SAAyD,CAAG,EAAE,CAEpE,GAAI,CAAAC,KAAK,CACT,GAAI,CAAAC,SAAS,CAAG,CAAC,CAEjB;AACA,MAAO,CAACD,KAAK,CAAGF,KAAK,CAACI,IAAI,CAACL,OAAO,CAAC,IAAM,IAAI,CAAE,CAC7C,KAAM,CAAAM,KAAK,CAAGH,KAAK,CAACG,KAAK,CACzB,KAAM,CAAAC,SAAS,CAAGJ,KAAK,CAAC,CAAC,CAAC,CAC1B,KAAM,CAAAK,IAAI,CAAGR,OAAO,CAACS,KAAK,CAACL,SAAS,CAAEE,KAAK,CAAC,CAC5C;AACA;AACAJ,SAAS,CAACQ,IAAI,CAAC,CACbF,IAAI,CACJG,UAAU,CAAEJ,SAAS,CAACK,OAAO,CAAC,KAAK,CAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CACpD,CAAC,CAAC,CACFT,SAAS,CAAGE,KAAK,CAAGH,KAAK,CAAC,CAAC,CAAC,CAACW,MAAM,CACrC,CAEA;AACA,KAAM,CAAAN,IAAI,CAAGR,OAAO,CAACS,KAAK,CAACL,SAAS,CAAC,CACrC,GAAII,IAAI,CAACM,MAAM,CAAG,CAAC,CAAE,CACnBZ,SAAS,CAACQ,IAAI,CAAC,CAAEF,IAAK,CAAC,CAAC,CAC1B,CAEA,MAAO,CAAAN,SAAS,CAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}