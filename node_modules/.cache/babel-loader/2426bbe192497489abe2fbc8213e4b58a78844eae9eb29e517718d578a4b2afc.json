{"ast":null,"code":"export const applyCitationOrder = (searchResults, unorderedSummary) => {\n  const orderedSearchResults = [];\n  const citations = unorderedSummary.match(/\\[\\d+\\]/g) || [];\n  const addedCitations = new Set();\n  for (let i = 0; i < citations.length; i++) {\n    const citation = citations[i];\n\n    // Ignore citations that have already been added.\n    if (addedCitations.has(citation)) continue;\n\n    // Extract index from [INDEX] format.\n    const citationIndex = Number(citation.slice(1, citation.length - 1)) - 1;\n\n    // Ignore citations that are out of range of the search results.\n    if (citationIndex < 0 || citationIndex >= searchResults.length) continue;\n    orderedSearchResults.push(searchResults[citationIndex]);\n    addedCitations.add(citation);\n  }\n  return orderedSearchResults;\n};","map":{"version":3,"names":["applyCitationOrder","searchResults","unorderedSummary","orderedSearchResults","citations","match","addedCitations","Set","i","length","citation","has","citationIndex","Number","slice","push","add"],"sources":["/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/utils/citations/applyCitationOrder.ts"],"sourcesContent":["export const applyCitationOrder = (searchResults: any[], unorderedSummary: string) => {\n  const orderedSearchResults: any[] = [];\n  const citations = unorderedSummary.match(/\\[\\d+\\]/g) || [];\n  const addedCitations = new Set<string>();\n\n  for (let i = 0; i < citations.length; i++) {\n    const citation = citations[i];\n\n    // Ignore citations that have already been added.\n    if (addedCitations.has(citation)) continue;\n\n    // Extract index from [INDEX] format.\n    const citationIndex = Number(citation.slice(1, citation.length - 1)) - 1;\n\n    // Ignore citations that are out of range of the search results.\n    if (citationIndex < 0 || citationIndex >= searchResults.length) continue;\n\n    orderedSearchResults.push(searchResults[citationIndex]);\n    addedCitations.add(citation);\n  }\n\n  return orderedSearchResults;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAGA,CAACC,aAAoB,EAAEC,gBAAwB,KAAK;EACpF,MAAMC,oBAA2B,GAAG,EAAE;EACtC,MAAMC,SAAS,GAAGF,gBAAgB,CAACG,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE;EAC1D,MAAMC,cAAc,GAAG,IAAIC,GAAG,CAAS,CAAC;EAExC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,SAAS,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACzC,MAAME,QAAQ,GAAGN,SAAS,CAACI,CAAC,CAAC;;IAE7B;IACA,IAAIF,cAAc,CAACK,GAAG,CAACD,QAAQ,CAAC,EAAE;;IAElC;IACA,MAAME,aAAa,GAAGC,MAAM,CAACH,QAAQ,CAACI,KAAK,CAAC,CAAC,EAAEJ,QAAQ,CAACD,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;;IAExE;IACA,IAAIG,aAAa,GAAG,CAAC,IAAIA,aAAa,IAAIX,aAAa,CAACQ,MAAM,EAAE;IAEhEN,oBAAoB,CAACY,IAAI,CAACd,aAAa,CAACW,aAAa,CAAC,CAAC;IACvDN,cAAc,CAACU,GAAG,CAACN,QAAQ,CAAC;EAC9B;EAEA,OAAOP,oBAAoB;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}