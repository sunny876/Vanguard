{"ast":null,"code":"var _jsxFileName = \"/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/components/searchSelect/SearchSelect.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { VuiOptionsList } from \"../optionsList/OptionsList\";\nimport { VuiPopover } from \"../popover/Popover\";\nimport { VuiTextInput } from \"../form\";\nimport { VuiSpacer } from \"../spacer/Spacer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// https://github.com/typescript-eslint/typescript-eslint/issues/4062\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-type-constraint\nexport const VuiSearchSelect = ({\n  children,\n  title,\n  isOpen,\n  setIsOpen,\n  options,\n  onSelect,\n  isMultiSelect = true,\n  selected = []\n}) => {\n  _s();\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [selectedOptions, setSelectedOptions] = useState();\n  const [orderedOptions, setOrderedOptions] = useState([]);\n  useEffect(() => {\n    // When the popover is opened, initialize the selected options,\n    // and sort the options so the selected ones are on top.\n    if (isOpen) {\n      const selectedOptionsCopy = selected.concat();\n      setSelectedOptions(selectedOptionsCopy);\n      const sortedOptions = options.concat().sort((first, second) => {\n        const isFirstSelected = selectedOptionsCopy.includes(first.value);\n        const isSecondSelected = selectedOptionsCopy.includes(second.value);\n        if (isFirstSelected && !isSecondSelected) {\n          return -1;\n        }\n        if (!isFirstSelected && isSecondSelected) {\n          return 1;\n        }\n        return 0;\n      });\n      setOrderedOptions(sortedOptions);\n    }\n  }, [isOpen]);\n  const updateOpen = () => {\n    if (isOpen) {\n      // When the popover is closed, notify the consumer of the\n      // selected options.\n      onSelect(selectedOptions !== null && selectedOptions !== void 0 ? selectedOptions : []);\n\n      // Signal the popover to be closed. We don't depend on the\n      // original isOpen because it will cause a flicker when the\n      // options are sorted.\n      setSelectedOptions(undefined);\n    }\n    setIsOpen(!isOpen);\n  };\n  const onSelectOption = value => {\n    if (isMultiSelect) {\n      setSelectedOptions(prev => {\n        if (!prev) return [];\n        const updated = prev.concat();\n        const index = prev.findIndex(item => item === value);\n        if (index !== -1) {\n          updated.splice(index, 1);\n          return updated;\n        }\n        updated.push(value);\n        return updated;\n      });\n      return;\n    }\n\n    // If the user can only select one option at a time,\n    // close the search select as soon as they make a choice.\n    onSelect([value]);\n\n    // Signal the popover to be closed. We don't depend on the\n    // original isOpen because it will cause a flicker when the\n    // options are sorted.\n    setSelectedOptions(undefined);\n    setIsOpen(false);\n  };\n  const visibleOptions = orderedOptions.filter(option => {\n    if (!searchValue.trim()) return true;\n    if (option.label.toLowerCase().includes(searchValue.toLowerCase())) return true;\n    return false;\n  });\n  return /*#__PURE__*/_jsxDEV(VuiPopover, {\n    isOpen: selectedOptions !== undefined,\n    setIsOpen: updateOpen,\n    button: children,\n    header: title,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vuiSearchSelect__search\",\n      children: [/*#__PURE__*/_jsxDEV(VuiTextInput, {\n        placeholder: \"Search\",\n        value: searchValue,\n        onChange: event => setSearchValue(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VuiSpacer, {\n        size: \"xxs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VuiOptionsList, {\n      isSelectable: true,\n      isScrollable: true,\n      onSelectOption: onSelectOption,\n      selected: selectedOptions,\n      options: visibleOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(VuiSearchSelect, \"AjInj2PfPWTaKDKt2+8d2o9u18A=\");\n_c = VuiSearchSelect;\nvar _c;\n$RefreshReg$(_c, \"VuiSearchSelect\");","map":{"version":3,"names":["useEffect","useState","VuiOptionsList","VuiPopover","VuiTextInput","VuiSpacer","jsxDEV","_jsxDEV","VuiSearchSelect","children","title","isOpen","setIsOpen","options","onSelect","isMultiSelect","selected","_s","searchValue","setSearchValue","selectedOptions","setSelectedOptions","orderedOptions","setOrderedOptions","selectedOptionsCopy","concat","sortedOptions","sort","first","second","isFirstSelected","includes","value","isSecondSelected","updateOpen","undefined","onSelectOption","prev","updated","index","findIndex","item","splice","push","visibleOptions","filter","option","trim","label","toLowerCase","button","header","className","placeholder","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","size","isSelectable","isScrollable","_c","$RefreshReg$"],"sources":["/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/components/searchSelect/SearchSelect.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Props as OptionsListProps, VuiOptionsList } from \"../optionsList/OptionsList\";\nimport { Props as PopoverProps, VuiPopover } from \"../popover/Popover\";\nimport { OptionListItem } from \"../optionsList/types\";\nimport { VuiTextInput } from \"../form\";\nimport { VuiSpacer } from \"../spacer/Spacer\";\n\ntype Props<T> = Pick<PopoverProps, \"isOpen\" | \"setIsOpen\"> &\n  Pick<OptionsListProps<T>, \"options\"> & {\n    children: PopoverProps[\"button\"];\n    title?: string;\n    selected: T[];\n    onSelect: (selected: T[]) => void;\n    isMultiSelect?: boolean;\n  };\n\n// https://github.com/typescript-eslint/typescript-eslint/issues/4062\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-type-constraint\nexport const VuiSearchSelect = <T extends unknown = unknown>({\n  children,\n  title,\n  isOpen,\n  setIsOpen,\n  options,\n  onSelect,\n  isMultiSelect = true,\n  selected = []\n}: Props<T>) => {\n  const [searchValue, setSearchValue] = useState<string>(\"\");\n  const [selectedOptions, setSelectedOptions] = useState<T[]>();\n  const [orderedOptions, setOrderedOptions] = useState<OptionListItem<T>[]>([]);\n\n  useEffect(() => {\n    // When the popover is opened, initialize the selected options,\n    // and sort the options so the selected ones are on top.\n    if (isOpen) {\n      const selectedOptionsCopy = selected.concat();\n      setSelectedOptions(selectedOptionsCopy);\n\n      const sortedOptions = options.concat().sort((first, second) => {\n        const isFirstSelected = selectedOptionsCopy.includes(first.value);\n        const isSecondSelected = selectedOptionsCopy.includes(second.value);\n        if (isFirstSelected && !isSecondSelected) {\n          return -1;\n        }\n\n        if (!isFirstSelected && isSecondSelected) {\n          return 1;\n        }\n\n        return 0;\n      });\n\n      setOrderedOptions(sortedOptions);\n    }\n  }, [isOpen]);\n\n  const updateOpen = () => {\n    if (isOpen) {\n      // When the popover is closed, notify the consumer of the\n      // selected options.\n      onSelect(selectedOptions ?? []);\n\n      // Signal the popover to be closed. We don't depend on the\n      // original isOpen because it will cause a flicker when the\n      // options are sorted.\n      setSelectedOptions(undefined);\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  const onSelectOption = (value: T) => {\n    if (isMultiSelect) {\n      setSelectedOptions((prev) => {\n        if (!prev) return [];\n\n        const updated = prev.concat();\n        const index = prev.findIndex((item) => item === value);\n\n        if (index !== -1) {\n          updated.splice(index, 1);\n          return updated;\n        }\n\n        updated.push(value);\n        return updated;\n      });\n\n      return;\n    }\n\n    // If the user can only select one option at a time,\n    // close the search select as soon as they make a choice.\n    onSelect([value]);\n\n    // Signal the popover to be closed. We don't depend on the\n    // original isOpen because it will cause a flicker when the\n    // options are sorted.\n    setSelectedOptions(undefined);\n    setIsOpen(false);\n  };\n\n  const visibleOptions = orderedOptions.filter((option) => {\n    if (!searchValue.trim()) return true;\n    if (option.label.toLowerCase().includes(searchValue.toLowerCase())) return true;\n    return false;\n  });\n\n  return (\n    <VuiPopover isOpen={selectedOptions !== undefined} setIsOpen={updateOpen} button={children} header={title}>\n      <div className=\"vuiSearchSelect__search\">\n        <VuiTextInput\n          placeholder=\"Search\"\n          value={searchValue}\n          onChange={(event) => setSearchValue(event.target.value)}\n        />\n        <VuiSpacer size=\"xxs\" />\n      </div>\n\n      <VuiOptionsList\n        isSelectable\n        isScrollable\n        onSelectOption={onSelectOption}\n        selected={selectedOptions}\n        options={visibleOptions}\n      />\n    </VuiPopover>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}