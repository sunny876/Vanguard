{"ast":null,"code":"var _configuration$appTit;import{createContext,useContext}from\"react\";import{mmrRerankerId}from\"../view/types\";import{configuration}from\"../configuration\";import{jsx as _jsx}from\"react/jsx-runtime\";const ConfigContext=/*#__PURE__*/createContext(undefined);const SEARCH_CONFIGS={endpoint:configuration.endpoint,corpusKey:configuration.corpusKey,customerId:configuration.customerId,apiKey:configuration.apiKey,hfToken:configuration.hfToken};const APP_CONFIGS={title:(_configuration$appTit=configuration.appTitle)!==null&&_configuration$appTit!==void 0?_configuration$appTit:\"\"};export const ConfigContextProvider=_ref=>{var _configuration$questi;let{children}=_ref;const exampleQuestions=(_configuration$questi=configuration.questions)!==null&&_configuration$questi!==void 0?_configuration$questi:[];const rerankConfig={isEnabled:true,numResults:50,id:mmrRerankerId,diversityBias:0.3};const hybrid={numWords:2,lambdaLong:0.0,lambdaShort:0.1};return/*#__PURE__*/_jsx(ConfigContext.Provider,{value:{search:SEARCH_CONFIGS,app:APP_CONFIGS,rerank:rerankConfig,hybrid,exampleQuestions},children:children});};export const useConfigContext=()=>{const context=useContext(ConfigContext);if(context===undefined){throw new Error(\"useConfigContext must be used within a ConfigContextProvider\");}return context;};","map":{"version":3,"names":["createContext","useContext","mmrRerankerId","configuration","jsx","_jsx","ConfigContext","undefined","SEARCH_CONFIGS","endpoint","corpusKey","customerId","apiKey","hfToken","APP_CONFIGS","title","_configuration$appTit","appTitle","ConfigContextProvider","_ref","_configuration$questi","children","exampleQuestions","questions","rerankConfig","isEnabled","numResults","id","diversityBias","hybrid","numWords","lambdaLong","lambdaShort","Provider","value","search","app","rerank","useConfigContext","context","Error"],"sources":["/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/contexts/ConfigurationContext.tsx"],"sourcesContent":["import { createContext, useContext, ReactNode } from \"react\";\nimport { mmrRerankerId } from \"../view/types\";\nimport { configuration } from \"../configuration\";\n\nexport interface Config {\n  // Search\n  endpoint: string;\n  corpusKey: string;\n  customerId: string;\n  apiKey: string;\n\n  // App\n  appTitle?: string;\n\n  // Questions\n  questions?: string[];\n  \n  // Hugging Face\n  hfToken?: string;\n}\n\ntype Search = {\n  endpoint?: string;\n  corpusKey?: string;\n  customerId?: string;\n  apiKey?: string;\n  hfToken?: string;\n};\n\ntype App = {\n  title: string;\n};\n\ntype ExampleQuestions = string[];\ntype Rerank = {\n  isEnabled: boolean;\n  numResults?: number;\n  id?: number;\n  diversityBias?: number;\n};\ntype Hybrid = { numWords: number; lambdaLong: number; lambdaShort: number };\n\ninterface ConfigContextType {\n  search: Search;\n  app: App;\n  rerank: Rerank;\n  hybrid: Hybrid;\n  exampleQuestions: ExampleQuestions;\n}\n\nconst ConfigContext = createContext<ConfigContextType | undefined>(undefined);\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst SEARCH_CONFIGS = {\n  endpoint: configuration.endpoint,\n  corpusKey: configuration.corpusKey,\n  customerId: configuration.customerId,\n  apiKey: configuration.apiKey,\n  hfToken: configuration.hfToken\n};\n\nconst APP_CONFIGS = {\n  title: configuration.appTitle ?? \"\"\n};\n\nexport const ConfigContextProvider = ({ children }: Props) => {\n  const exampleQuestions = configuration.questions ?? [];\n  const rerankConfig = {\n    isEnabled: true,\n    numResults: 50,\n    id: mmrRerankerId,\n    diversityBias: 0.3\n  };\n\n  const hybrid = {\n    numWords: 2,\n    lambdaLong: 0.0,\n    lambdaShort: 0.1\n  };\n\n  return (\n    <ConfigContext.Provider\n      value={{\n        search: SEARCH_CONFIGS,\n        app: APP_CONFIGS,\n        rerank: rerankConfig,\n        hybrid,\n        exampleQuestions\n      }}\n    >\n      {children}\n    </ConfigContext.Provider>\n  );\n};\n\nexport const useConfigContext = () => {\n  const context = useContext(ConfigContext);\n  if (context === undefined) {\n    throw new Error(\"useConfigContext must be used within a ConfigContextProvider\");\n  }\n  return context;\n};\n"],"mappings":"0BAAA,OAASA,aAAa,CAAEC,UAAU,KAAmB,OAAO,CAC5D,OAASC,aAAa,KAAQ,eAAe,CAC7C,OAASC,aAAa,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAgDjD,KAAM,CAAAC,aAAa,cAAGN,aAAa,CAAgCO,SAAS,CAAC,CAM7E,KAAM,CAAAC,cAAc,CAAG,CACrBC,QAAQ,CAAEN,aAAa,CAACM,QAAQ,CAChCC,SAAS,CAAEP,aAAa,CAACO,SAAS,CAClCC,UAAU,CAAER,aAAa,CAACQ,UAAU,CACpCC,MAAM,CAAET,aAAa,CAACS,MAAM,CAC5BC,OAAO,CAAEV,aAAa,CAACU,OACzB,CAAC,CAED,KAAM,CAAAC,WAAW,CAAG,CAClBC,KAAK,EAAAC,qBAAA,CAAEb,aAAa,CAACc,QAAQ,UAAAD,qBAAA,UAAAA,qBAAA,CAAI,EACnC,CAAC,CAED,MAAO,MAAM,CAAAE,qBAAqB,CAAGC,IAAA,EAAyB,KAAAC,qBAAA,IAAxB,CAAEC,QAAgB,CAAC,CAAAF,IAAA,CACvD,KAAM,CAAAG,gBAAgB,EAAAF,qBAAA,CAAGjB,aAAa,CAACoB,SAAS,UAAAH,qBAAA,UAAAA,qBAAA,CAAI,EAAE,CACtD,KAAM,CAAAI,YAAY,CAAG,CACnBC,SAAS,CAAE,IAAI,CACfC,UAAU,CAAE,EAAE,CACdC,EAAE,CAAEzB,aAAa,CACjB0B,aAAa,CAAE,GACjB,CAAC,CAED,KAAM,CAAAC,MAAM,CAAG,CACbC,QAAQ,CAAE,CAAC,CACXC,UAAU,CAAE,GAAG,CACfC,WAAW,CAAE,GACf,CAAC,CAED,mBACE3B,IAAA,CAACC,aAAa,CAAC2B,QAAQ,EACrBC,KAAK,CAAE,CACLC,MAAM,CAAE3B,cAAc,CACtB4B,GAAG,CAAEtB,WAAW,CAChBuB,MAAM,CAAEb,YAAY,CACpBK,MAAM,CACNP,gBACF,CAAE,CAAAD,QAAA,CAEDA,QAAQ,CACa,CAAC,CAE7B,CAAC,CAED,MAAO,MAAM,CAAAiB,gBAAgB,CAAGA,CAAA,GAAM,CACpC,KAAM,CAAAC,OAAO,CAAGtC,UAAU,CAACK,aAAa,CAAC,CACzC,GAAIiC,OAAO,GAAKhC,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAiC,KAAK,CAAC,8DAA8D,CAAC,CACjF,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}