{"ast":null,"code":"const MAX_PAGES = 5;\nconst TRUNCATION_LIMIT = 3;\nexport const createPagination = (currentPage, numPages) => {\n  if (numPages <= MAX_PAGES) {\n    // Renders as: [1] 2 3 4 5\n    return {\n      items: Array.from({\n        length: numPages\n      }, (_, i) => i + 1),\n      activeIndex: currentPage - 1\n    };\n  }\n  let activeIndex;\n  // Pagination always begins with the first page.\n  const items = [1];\n  if (currentPage > TRUNCATION_LIMIT && currentPage <= numPages - TRUNCATION_LIMIT) {\n    // Renders as: 1 ... [15] ... 60\n    activeIndex = 2;\n    items.push(\"...\");\n    items.push(currentPage);\n    items.push(\"...\");\n  } else if (currentPage > TRUNCATION_LIMIT) {\n    // Renders as: 1 ... [4] 5 6\n    // Renders as: 1 ... 4 [5] 6\n    const lastIndex = MAX_PAGES - 1;\n    activeIndex = lastIndex - (numPages - currentPage);\n    items.push(\"...\");\n    items.push(numPages - 2);\n    items.push(numPages - 1);\n  } else if (currentPage <= numPages - TRUNCATION_LIMIT) {\n    // Renders as: 1 [2] 3 ... 6\n    // Renders as: 1 2 [3] ... 6\n    activeIndex = currentPage - 1;\n    items.push(2);\n    items.push(3);\n    items.push(\"...\");\n  }\n\n  // Pagination always ends with the last page.\n  items.push(numPages);\n  return {\n    items,\n    activeIndex\n  };\n};","map":{"version":3,"names":["MAX_PAGES","TRUNCATION_LIMIT","createPagination","currentPage","numPages","items","Array","from","length","_","i","activeIndex","push","lastIndex"],"sources":["/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/components/table/createPagination.ts"],"sourcesContent":["const MAX_PAGES = 5;\nconst TRUNCATION_LIMIT = 3;\n\nexport const createPagination = (currentPage: number, numPages: number) => {\n  if (numPages <= MAX_PAGES) {\n    // Renders as: [1] 2 3 4 5\n    return {\n      items: Array.from({ length: numPages }, (_, i) => i + 1),\n      activeIndex: currentPage - 1\n    };\n  }\n\n  let activeIndex;\n  // Pagination always begins with the first page.\n  const items: Array<\"...\" | number> = [1];\n\n  if (currentPage > TRUNCATION_LIMIT && currentPage <= numPages - TRUNCATION_LIMIT) {\n    // Renders as: 1 ... [15] ... 60\n    activeIndex = 2;\n    items.push(\"...\");\n    items.push(currentPage);\n    items.push(\"...\");\n  } else if (currentPage > TRUNCATION_LIMIT) {\n    // Renders as: 1 ... [4] 5 6\n    // Renders as: 1 ... 4 [5] 6\n    const lastIndex = MAX_PAGES - 1;\n    activeIndex = lastIndex - (numPages - currentPage);\n    items.push(\"...\");\n    items.push(numPages - 2);\n    items.push(numPages - 1);\n  } else if (currentPage <= numPages - TRUNCATION_LIMIT) {\n    // Renders as: 1 [2] 3 ... 6\n    // Renders as: 1 2 [3] ... 6\n    activeIndex = currentPage - 1;\n    items.push(2);\n    items.push(3);\n    items.push(\"...\");\n  }\n\n  // Pagination always ends with the last page.\n  items.push(numPages);\n\n  return {\n    items,\n    activeIndex\n  };\n};\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,CAAC;AACnB,MAAMC,gBAAgB,GAAG,CAAC;AAE1B,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,WAAmB,EAAEC,QAAgB,KAAK;EACzE,IAAIA,QAAQ,IAAIJ,SAAS,EAAE;IACzB;IACA,OAAO;MACLK,KAAK,EAAEC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEJ;MAAS,CAAC,EAAE,CAACK,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;MACxDC,WAAW,EAAER,WAAW,GAAG;IAC7B,CAAC;EACH;EAEA,IAAIQ,WAAW;EACf;EACA,MAAMN,KAA4B,GAAG,CAAC,CAAC,CAAC;EAExC,IAAIF,WAAW,GAAGF,gBAAgB,IAAIE,WAAW,IAAIC,QAAQ,GAAGH,gBAAgB,EAAE;IAChF;IACAU,WAAW,GAAG,CAAC;IACfN,KAAK,CAACO,IAAI,CAAC,KAAK,CAAC;IACjBP,KAAK,CAACO,IAAI,CAACT,WAAW,CAAC;IACvBE,KAAK,CAACO,IAAI,CAAC,KAAK,CAAC;EACnB,CAAC,MAAM,IAAIT,WAAW,GAAGF,gBAAgB,EAAE;IACzC;IACA;IACA,MAAMY,SAAS,GAAGb,SAAS,GAAG,CAAC;IAC/BW,WAAW,GAAGE,SAAS,IAAIT,QAAQ,GAAGD,WAAW,CAAC;IAClDE,KAAK,CAACO,IAAI,CAAC,KAAK,CAAC;IACjBP,KAAK,CAACO,IAAI,CAACR,QAAQ,GAAG,CAAC,CAAC;IACxBC,KAAK,CAACO,IAAI,CAACR,QAAQ,GAAG,CAAC,CAAC;EAC1B,CAAC,MAAM,IAAID,WAAW,IAAIC,QAAQ,GAAGH,gBAAgB,EAAE;IACrD;IACA;IACAU,WAAW,GAAGR,WAAW,GAAG,CAAC;IAC7BE,KAAK,CAACO,IAAI,CAAC,CAAC,CAAC;IACbP,KAAK,CAACO,IAAI,CAAC,CAAC,CAAC;IACbP,KAAK,CAACO,IAAI,CAAC,KAAK,CAAC;EACnB;;EAEA;EACAP,KAAK,CAACO,IAAI,CAACR,QAAQ,CAAC;EAEpB,OAAO;IACLC,KAAK;IACLM;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}