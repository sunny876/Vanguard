{"ast":null,"code":"export const reorderCitations=unorderedSummary=>{const allCitations=unorderedSummary.match(/\\[\\d+\\]/g)||[];const uniqueCitations=[...new Set(allCitations)];const citationToReplacement={};uniqueCitations.forEach((citation,index)=>{citationToReplacement[citation]=`[${index+1}]`;});return unorderedSummary.replace(/\\[\\d+\\]/g,match=>citationToReplacement[match]);};","map":{"version":3,"names":["reorderCitations","unorderedSummary","allCitations","match","uniqueCitations","Set","citationToReplacement","forEach","citation","index","replace"],"sources":["/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/utils/citations/reorderCitations.ts"],"sourcesContent":["export const reorderCitations = (unorderedSummary: string) => {\n  const allCitations = unorderedSummary.match(/\\[\\d+\\]/g) || [];\n\n  const uniqueCitations = [...new Set(allCitations)];\n  const citationToReplacement: { [key: string]: string } = {};\n  uniqueCitations.forEach((citation, index) => {\n    citationToReplacement[citation] = `[${index + 1}]`;\n  });\n\n  return unorderedSummary.replace(\n    /\\[\\d+\\]/g,\n    (match) => citationToReplacement[match]\n  );\n};\n"],"mappings":"AAAA,MAAO,MAAM,CAAAA,gBAAgB,CAAIC,gBAAwB,EAAK,CAC5D,KAAM,CAAAC,YAAY,CAAGD,gBAAgB,CAACE,KAAK,CAAC,UAAU,CAAC,EAAI,EAAE,CAE7D,KAAM,CAAAC,eAAe,CAAG,CAAC,GAAG,GAAI,CAAAC,GAAG,CAACH,YAAY,CAAC,CAAC,CAClD,KAAM,CAAAI,qBAAgD,CAAG,CAAC,CAAC,CAC3DF,eAAe,CAACG,OAAO,CAAC,CAACC,QAAQ,CAAEC,KAAK,GAAK,CAC3CH,qBAAqB,CAACE,QAAQ,CAAC,CAAG,IAAIC,KAAK,CAAG,CAAC,GAAG,CACpD,CAAC,CAAC,CAEF,MAAO,CAAAR,gBAAgB,CAACS,OAAO,CAC7B,UAAU,CACTP,KAAK,EAAKG,qBAAqB,CAACH,KAAK,CACxC,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}