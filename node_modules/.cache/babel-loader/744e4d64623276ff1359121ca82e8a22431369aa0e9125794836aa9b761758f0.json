{"ast":null,"code":"import React,{useEffect,useRef,useState}from\"react\";import{BiChat,BiExpand,BiExpandVertical,BiPaperPlane,BiX}from\"react-icons/bi\";import classNames from\"classnames\";import{VuiFlexContainer}from\"../flex/FlexContainer\";import{VuiFlexItem}from\"../flex/FlexItem\";import{VuiIcon}from\"../icon/Icon\";import{VuiIconButton}from\"../button/IconButton\";import{VuiTextInput}from\"../form\";import{CHAT_STYLE_ORDER}from\"./types\";import{VuiButtonSecondary}from\"../button/ButtonSecondary\";import{VuiChatInspector}from\"./ChatInspector\";import{VuiSpacer}from\"../spacer/Spacer\";import{VuiButtonTertiary}from\"../button/ButtonTertiary\";import{VuiChatTurn}from\"./ChatTurn\";import{VuiChatPanel}from\"./ChatPanel\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const chatStyleToIconMap={closed:/*#__PURE__*/_jsx(BiX,{}),condensed:/*#__PURE__*/_jsx(BiExpandVertical,{}),tall:/*#__PURE__*/_jsx(BiExpand,{}),fullScreen:/*#__PURE__*/_jsx(BiX,{})};export const VuiChat=_ref=>{let{openPrompt,chatStyle,setChatStyle,introduction,suggestions,onInput,onRetry,onReset,conversation,settings,isInspectionEnabled}=_ref;const[isTouched,setIsTouched]=useState(false);const[isSettingsOpen,setIsSettingsOpen]=useState(false);const[input,setInput]=useState(\"\");const[inspectedTurn,setInspectedTurn]=useState();const buttonRef=useRef(null);const conversationRef=useRef(null);const inputRef=useRef(null);const isScrolledToBottomRef=useRef(true);const prevConversationRef=useRef({isBottomQuestionLoading:true,length:0});const isOpen=chatStyle!==\"closed\";useEffect(()=>{var _conversationRef$curr;const onScrollChat=e=>{isScrolledToBottomRef.current=conversationRef.current?Math.abs(conversationRef.current.scrollHeight-conversationRef.current.clientHeight-conversationRef.current.scrollTop)<1:true;};// We're going to track the scroll position, which will determine\n// or not the user is at the bottom of the chat.\n(_conversationRef$curr=conversationRef.current)===null||_conversationRef$curr===void 0?void 0:_conversationRef$curr.addEventListener(\"scroll\",onScrollChat);return()=>{var _conversationRef$curr2;(_conversationRef$curr2=conversationRef.current)===null||_conversationRef$curr2===void 0?void 0:_conversationRef$curr2.removeEventListener(\"scroll\",onScrollChat);};},[]);useEffect(()=>{var _conversation;// Scrolling UX rules:\n// * Scroll down if the last recorded scroll position was already\n//   at the bottom of the list and if the last question has resolved\n//   to an answer.\n// * If the user has scrolled to another position, then don’t\n//   auto-scroll.\n// * If the question that has resolved is not the last question,\n//   don’t auto-scroll.\n//\n// This way if the user takes control of the scroll position, they\n// remain in control. If the user hasn’t taken control of the scroll\n// position, then the scroll feels stable (by staying at the\n// bottom) as opposed to scrolling unpredictably through the list\n// as questions resolve.\nconst hasBottomQuestionJustChanged=// A new question has been added to the bottom of the list.\nprevConversationRef.current.length!==conversation.length||// The last question has just resolved to an answer.\nprevConversationRef.current.isBottomQuestionLoading!==Boolean((_conversation=conversation[conversation.length-1])===null||_conversation===void 0?void 0:_conversation.isLoading);// If the intro is really long, the chat can be in a state where\n// the user is at the top of the chat and their first question is\n// off-screen. In this case, we want to scroll to the bottom.\nconst shouldStickToBottom=conversation.length===1||isScrolledToBottomRef.current&&hasBottomQuestionJustChanged;if(isOpen&&shouldStickToBottom){var _conversationRef$curr3,_conversationRef$curr4;// Scroll to the bottom of the chat to keep the latest turn in view.\n(_conversationRef$curr3=conversationRef.current)===null||_conversationRef$curr3===void 0?void 0:_conversationRef$curr3.scrollTo({left:0,top:(_conversationRef$curr4=conversationRef.current)===null||_conversationRef$curr4===void 0?void 0:_conversationRef$curr4.scrollHeight,behavior:\"smooth\"});}prevConversationRef.current={length:conversation.length,isBottomQuestionLoading:conversation.length>0?Boolean(conversation[conversation.length-1].isLoading):false};},[conversation]);useEffect(()=>{// Only autofocus if the user has interacted with the component.\n// This prevents the component stealing focus when it first mounts.\nif(isTouched){if(isOpen){var _inputRef$current;(_inputRef$current=inputRef.current)===null||_inputRef$current===void 0?void 0:_inputRef$current.focus();}else{var _buttonRef$current;(_buttonRef$current=buttonRef.current)===null||_buttonRef$current===void 0?void 0:_buttonRef$current.focus();}}},[isOpen]);const onSubmit=()=>{if(!(input!==null&&input!==void 0&&input.trim()))return;onInput(input);setInput(\"\");};const cycleChatStyle=()=>{setIsTouched(true);const currentIndex=CHAT_STYLE_ORDER.indexOf(chatStyle);setChatStyle(currentIndex===CHAT_STYLE_ORDER.length-1?CHAT_STYLE_ORDER[0]:CHAT_STYLE_ORDER[currentIndex+1]);};const buttonClasses=classNames(\"vuiChatButton\",{\"vuiChatButton-isHidden\":isOpen});const classes=classNames(\"vuiChat\",`vuiChat--${chatStyle}`);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{// @ts-expect-error React doesn't support inert yet\ninert:isOpen?\"\":null,className:buttonClasses,onClick:()=>setChatStyle(\"condensed\"),ref:buttonRef,children:/*#__PURE__*/_jsxs(VuiFlexContainer,{alignItems:\"center\",spacing:\"s\",children:[/*#__PURE__*/_jsx(VuiFlexItem,{shrink:false,grow:false,children:/*#__PURE__*/_jsx(VuiIcon,{size:\"s\",children:/*#__PURE__*/_jsx(BiChat,{})})}),/*#__PURE__*/_jsx(VuiFlexItem,{grow:1,children:/*#__PURE__*/_jsx(\"div\",{className:\"vuiChatButton__prompt\",children:openPrompt})})]})}),/*#__PURE__*/_jsxs(\"div\",{// @ts-expect-error React doesn't support inert yet\ninert:!isOpen?\"\":null,className:classes,onKeyDown:e=>{if(e.key===\"Escape\")setChatStyle(\"closed\");},children:[/*#__PURE__*/_jsx(\"div\",{className:\"vuiChat__header\",children:/*#__PURE__*/_jsxs(VuiFlexContainer,{alignItems:\"center\",justifyContent:\"spaceBetween\",children:[/*#__PURE__*/_jsx(VuiFlexItem,{grow:1,children:/*#__PURE__*/_jsxs(VuiFlexContainer,{alignItems:\"center\",spacing:\"s\",children:[/*#__PURE__*/_jsx(VuiFlexItem,{shrink:false,grow:false,children:/*#__PURE__*/_jsx(VuiIcon,{size:\"s\",children:/*#__PURE__*/_jsx(BiChat,{})})}),/*#__PURE__*/_jsx(VuiFlexItem,{grow:1,children:/*#__PURE__*/_jsx(\"div\",{className:\"vuiChatButton__prompt\",children:/*#__PURE__*/_jsx(\"h2\",{children:openPrompt})})})]})}),settings&&/*#__PURE__*/_jsx(VuiFlexItem,{shrink:false,grow:false,children:/*#__PURE__*/_jsx(VuiButtonSecondary,{color:\"neutral\",size:\"xs\",onClick:()=>setIsSettingsOpen(true),children:\"Settings\"})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"vuiChat__conversation\",ref:conversationRef,children:[(introduction||suggestions)&&/*#__PURE__*/_jsxs(\"div\",{className:\"vuiChat__introduction\",children:[introduction,introduction&&/*#__PURE__*/_jsx(VuiSpacer,{size:\"s\"}),suggestions===null||suggestions===void 0?void 0:suggestions.map(suggestion=>/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(VuiButtonTertiary,{size:\"s\",color:\"primary\",onClick:()=>onInput(suggestion),noPadding:true,children:suggestion},suggestion)})),suggestions&&suggestions.length>0&&/*#__PURE__*/_jsx(VuiSpacer,{size:\"s\"})]}),conversation.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"vuiChat__turns\",children:conversation.map((turn,index)=>/*#__PURE__*/_jsx(VuiChatTurn,{turn:turn,isInspectionEnabled:isInspectionEnabled,setInspectedTurn:setInspectedTurn,onRetry:onRetry},index))}),conversation.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"vuiChat__conversationActions\",children:/*#__PURE__*/_jsx(VuiFlexContainer,{alignItems:\"center\",justifyContent:\"center\",children:/*#__PURE__*/_jsx(VuiFlexItem,{children:/*#__PURE__*/_jsx(VuiButtonSecondary,{color:\"neutral\",size:\"xs\",onClick:onReset,children:\"Start over\"})})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"vuiChat__input\",children:/*#__PURE__*/_jsxs(VuiFlexContainer,{alignItems:\"center\",spacing:\"xxs\",children:[/*#__PURE__*/_jsx(VuiFlexItem,{grow:1,children:/*#__PURE__*/_jsx(VuiTextInput,{value:input,onChange:e=>{setInput(e.currentTarget.value);},onSubmit:onSubmit,fullWidth:true,ref:inputRef})}),/*#__PURE__*/_jsx(VuiFlexItem,{shrink:false,grow:false,children:/*#__PURE__*/_jsx(VuiIconButton,{icon:/*#__PURE__*/_jsx(VuiIcon,{children:/*#__PURE__*/_jsx(BiPaperPlane,{})}),color:\"primary\",onClick:onSubmit})}),/*#__PURE__*/_jsx(VuiFlexItem,{shrink:false,grow:false,children:/*#__PURE__*/_jsx(VuiIconButton,{icon:/*#__PURE__*/_jsx(VuiIcon,{children:chatStyleToIconMap[chatStyle]}),color:\"neutral\",onClick:cycleChatStyle})})]})}),isSettingsOpen&&/*#__PURE__*/_jsx(VuiChatPanel,{title:\"Chat settings\",onClose:()=>setIsSettingsOpen(false),children:settings}),Boolean(inspectedTurn)&&/*#__PURE__*/_jsx(VuiChatInspector,{turn:inspectedTurn,onClose:()=>setInspectedTurn(undefined)})]})]});};","map":{"version":3,"names":["React","useEffect","useRef","useState","BiChat","BiExpand","BiExpandVertical","BiPaperPlane","BiX","classNames","VuiFlexContainer","VuiFlexItem","VuiIcon","VuiIconButton","VuiTextInput","CHAT_STYLE_ORDER","VuiButtonSecondary","VuiChatInspector","VuiSpacer","VuiButtonTertiary","VuiChatTurn","VuiChatPanel","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","chatStyleToIconMap","closed","condensed","tall","fullScreen","VuiChat","_ref","openPrompt","chatStyle","setChatStyle","introduction","suggestions","onInput","onRetry","onReset","conversation","settings","isInspectionEnabled","isTouched","setIsTouched","isSettingsOpen","setIsSettingsOpen","input","setInput","inspectedTurn","setInspectedTurn","buttonRef","conversationRef","inputRef","isScrolledToBottomRef","prevConversationRef","isBottomQuestionLoading","length","isOpen","_conversationRef$curr","onScrollChat","e","current","Math","abs","scrollHeight","clientHeight","scrollTop","addEventListener","_conversationRef$curr2","removeEventListener","_conversation","hasBottomQuestionJustChanged","Boolean","isLoading","shouldStickToBottom","_conversationRef$curr3","_conversationRef$curr4","scrollTo","left","top","behavior","_inputRef$current","focus","_buttonRef$current","onSubmit","trim","cycleChatStyle","currentIndex","indexOf","buttonClasses","classes","children","inert","className","onClick","ref","alignItems","spacing","shrink","grow","size","onKeyDown","key","justifyContent","color","map","suggestion","noPadding","turn","index","value","onChange","currentTarget","fullWidth","icon","title","onClose","undefined"],"sources":["/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/components/chat/Chat.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { BiChat, BiExpand, BiExpandVertical, BiPaperPlane, BiX } from \"react-icons/bi\";\nimport classNames from \"classnames\";\nimport { VuiFlexContainer } from \"../flex/FlexContainer\";\nimport { VuiFlexItem } from \"../flex/FlexItem\";\nimport { VuiIcon } from \"../icon/Icon\";\nimport { VuiIconButton } from \"../button/IconButton\";\nimport { VuiTextInput } from \"../form\";\nimport { ChatStyle, ChatTurn, CHAT_STYLE_ORDER } from \"./types\";\nimport { VuiButtonSecondary } from \"../button/ButtonSecondary\";\nimport { VuiChatInspector } from \"./ChatInspector\";\nimport { VuiSpacer } from \"../spacer/Spacer\";\nimport { VuiButtonTertiary } from \"../button/ButtonTertiary\";\nimport { VuiChatTurn } from \"./ChatTurn\";\nimport { VuiChatPanel } from \"./ChatPanel\";\n\ntype Props = {\n  openPrompt: string;\n  chatStyle: ChatStyle;\n  setChatStyle: (chatStyle: ChatStyle) => void;\n  introduction?: string;\n  suggestions?: string[];\n  onInput: (input: string) => void;\n  onRetry: (trun: ChatTurn) => void;\n  onReset: () => void;\n  conversation: ChatTurn[];\n  settings?: React.ReactNode;\n  isInspectionEnabled?: boolean;\n};\n\nconst chatStyleToIconMap = {\n  closed: <BiX />,\n  condensed: <BiExpandVertical />,\n  tall: <BiExpand />,\n  fullScreen: <BiX />\n} as const;\n\nexport const VuiChat = ({\n  openPrompt,\n  chatStyle,\n  setChatStyle,\n  introduction,\n  suggestions,\n  onInput,\n  onRetry,\n  onReset,\n  conversation,\n  settings,\n  isInspectionEnabled\n}: Props) => {\n  const [isTouched, setIsTouched] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [inspectedTurn, setInspectedTurn] = useState<ChatTurn>();\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const conversationRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isScrolledToBottomRef = useRef(true);\n  const prevConversationRef = useRef({\n    isBottomQuestionLoading: true,\n    length: 0\n  });\n\n  const isOpen = chatStyle !== \"closed\";\n\n  useEffect(() => {\n    const onScrollChat = (e: Event) => {\n      isScrolledToBottomRef.current = conversationRef.current\n        ? Math.abs(\n            conversationRef.current.scrollHeight -\n              conversationRef.current.clientHeight -\n              conversationRef.current.scrollTop\n          ) < 1\n        : true;\n    };\n\n    // We're going to track the scroll position, which will determine\n    // or not the user is at the bottom of the chat.\n    conversationRef.current?.addEventListener(\"scroll\", onScrollChat);\n\n    return () => {\n      conversationRef.current?.removeEventListener(\"scroll\", onScrollChat);\n    };\n  }, []);\n\n  useEffect(() => {\n    // Scrolling UX rules:\n    // * Scroll down if the last recorded scroll position was already\n    //   at the bottom of the list and if the last question has resolved\n    //   to an answer.\n    // * If the user has scrolled to another position, then don’t\n    //   auto-scroll.\n    // * If the question that has resolved is not the last question,\n    //   don’t auto-scroll.\n    //\n    // This way if the user takes control of the scroll position, they\n    // remain in control. If the user hasn’t taken control of the scroll\n    // position, then the scroll feels stable (by staying at the\n    // bottom) as opposed to scrolling unpredictably through the list\n    // as questions resolve.\n\n    const hasBottomQuestionJustChanged =\n      // A new question has been added to the bottom of the list.\n      prevConversationRef.current.length !== conversation.length ||\n      // The last question has just resolved to an answer.\n      prevConversationRef.current.isBottomQuestionLoading !== Boolean(conversation[conversation.length - 1]?.isLoading);\n\n    // If the intro is really long, the chat can be in a state where\n    // the user is at the top of the chat and their first question is\n    // off-screen. In this case, we want to scroll to the bottom.\n    const shouldStickToBottom =\n      conversation.length === 1 || (isScrolledToBottomRef.current && hasBottomQuestionJustChanged);\n\n    if (isOpen && shouldStickToBottom) {\n      // Scroll to the bottom of the chat to keep the latest turn in view.\n      conversationRef.current?.scrollTo({\n        left: 0,\n        top: conversationRef.current?.scrollHeight,\n        behavior: \"smooth\"\n      });\n    }\n\n    prevConversationRef.current = {\n      length: conversation.length,\n      isBottomQuestionLoading:\n        conversation.length > 0 ? Boolean(conversation[conversation.length - 1].isLoading) : false\n    };\n  }, [conversation]);\n\n  useEffect(() => {\n    // Only autofocus if the user has interacted with the component.\n    // This prevents the component stealing focus when it first mounts.\n    if (isTouched) {\n      if (isOpen) {\n        inputRef.current?.focus();\n      } else {\n        buttonRef.current?.focus();\n      }\n    }\n  }, [isOpen]);\n\n  const onSubmit = () => {\n    if (!input?.trim()) return;\n    onInput(input);\n    setInput(\"\");\n  };\n\n  const cycleChatStyle = () => {\n    setIsTouched(true);\n    const currentIndex = CHAT_STYLE_ORDER.indexOf(chatStyle);\n    setChatStyle(\n      currentIndex === CHAT_STYLE_ORDER.length - 1 ? CHAT_STYLE_ORDER[0] : CHAT_STYLE_ORDER[currentIndex + 1]\n    );\n  };\n\n  const buttonClasses = classNames(\"vuiChatButton\", {\n    \"vuiChatButton-isHidden\": isOpen\n  });\n\n  const classes = classNames(\"vuiChat\", `vuiChat--${chatStyle}`);\n\n  return (\n    <>\n      <button\n        // @ts-expect-error React doesn't support inert yet\n        inert={isOpen ? \"\" : null}\n        className={buttonClasses}\n        onClick={() => setChatStyle(\"condensed\")}\n        ref={buttonRef}\n      >\n        <VuiFlexContainer alignItems=\"center\" spacing=\"s\">\n          <VuiFlexItem shrink={false} grow={false}>\n            <VuiIcon size=\"s\">\n              <BiChat />\n            </VuiIcon>\n          </VuiFlexItem>\n\n          <VuiFlexItem grow={1}>\n            <div className=\"vuiChatButton__prompt\">{openPrompt}</div>\n          </VuiFlexItem>\n        </VuiFlexContainer>\n      </button>\n\n      <div\n        // @ts-expect-error React doesn't support inert yet\n        inert={!isOpen ? \"\" : null}\n        className={classes}\n        onKeyDown={(e) => {\n          if (e.key === \"Escape\") setChatStyle(\"closed\");\n        }}\n      >\n        <div className=\"vuiChat__header\">\n          <VuiFlexContainer alignItems=\"center\" justifyContent=\"spaceBetween\">\n            <VuiFlexItem grow={1}>\n              <VuiFlexContainer alignItems=\"center\" spacing=\"s\">\n                <VuiFlexItem shrink={false} grow={false}>\n                  <VuiIcon size=\"s\">\n                    <BiChat />\n                  </VuiIcon>\n                </VuiFlexItem>\n\n                <VuiFlexItem grow={1}>\n                  <div className=\"vuiChatButton__prompt\">\n                    <h2>{openPrompt}</h2>\n                  </div>\n                </VuiFlexItem>\n              </VuiFlexContainer>\n            </VuiFlexItem>\n\n            {settings && (\n              <VuiFlexItem shrink={false} grow={false}>\n                <VuiButtonSecondary color=\"neutral\" size=\"xs\" onClick={() => setIsSettingsOpen(true)}>\n                  Settings\n                </VuiButtonSecondary>\n              </VuiFlexItem>\n            )}\n          </VuiFlexContainer>\n        </div>\n\n        <div className=\"vuiChat__conversation\" ref={conversationRef}>\n          {(introduction || suggestions) && (\n            <div className=\"vuiChat__introduction\">\n              {introduction}\n\n              {introduction && <VuiSpacer size=\"s\" />}\n\n              {suggestions?.map((suggestion) => (\n                <div>\n                  <VuiButtonTertiary\n                    size=\"s\"\n                    color=\"primary\"\n                    key={suggestion}\n                    onClick={() => onInput(suggestion)}\n                    noPadding\n                  >\n                    {suggestion}\n                  </VuiButtonTertiary>\n                </div>\n              ))}\n\n              {suggestions && suggestions.length > 0 && <VuiSpacer size=\"s\" />}\n            </div>\n          )}\n\n          {conversation.length > 0 && (\n            <div className=\"vuiChat__turns\">\n              {conversation.map((turn, index) => (\n                <VuiChatTurn\n                  turn={turn}\n                  isInspectionEnabled={isInspectionEnabled}\n                  setInspectedTurn={setInspectedTurn}\n                  onRetry={onRetry}\n                  key={index}\n                />\n              ))}\n            </div>\n          )}\n\n          {conversation.length > 0 && (\n            <div className=\"vuiChat__conversationActions\">\n              <VuiFlexContainer alignItems=\"center\" justifyContent=\"center\">\n                <VuiFlexItem>\n                  <VuiButtonSecondary color=\"neutral\" size=\"xs\" onClick={onReset}>\n                    Start over\n                  </VuiButtonSecondary>\n                </VuiFlexItem>\n              </VuiFlexContainer>\n            </div>\n          )}\n        </div>\n\n        <div className=\"vuiChat__input\">\n          <VuiFlexContainer alignItems=\"center\" spacing=\"xxs\">\n            <VuiFlexItem grow={1}>\n              <VuiTextInput\n                value={input}\n                onChange={(e) => {\n                  setInput(e.currentTarget.value);\n                }}\n                onSubmit={onSubmit}\n                fullWidth\n                ref={inputRef}\n              />\n            </VuiFlexItem>\n\n            <VuiFlexItem shrink={false} grow={false}>\n              <VuiIconButton\n                icon={\n                  <VuiIcon>\n                    <BiPaperPlane />\n                  </VuiIcon>\n                }\n                color=\"primary\"\n                onClick={onSubmit}\n              />\n            </VuiFlexItem>\n\n            <VuiFlexItem shrink={false} grow={false}>\n              <VuiIconButton\n                icon={<VuiIcon>{chatStyleToIconMap[chatStyle]}</VuiIcon>}\n                color=\"neutral\"\n                onClick={cycleChatStyle}\n              />\n            </VuiFlexItem>\n          </VuiFlexContainer>\n        </div>\n\n        {isSettingsOpen && (\n          <VuiChatPanel title=\"Chat settings\" onClose={() => setIsSettingsOpen(false)}>\n            {settings}\n          </VuiChatPanel>\n        )}\n\n        {Boolean(inspectedTurn) && (\n          <VuiChatInspector turn={inspectedTurn} onClose={() => setInspectedTurn(undefined)} />\n        )}\n      </div>\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}