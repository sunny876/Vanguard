{"ast":null,"code":"import{forwardRef}from\"react\";import classNames from\"classnames\";import{Link}from\"react-router-dom\";import{getTrackingProps}from\"../../utils/getTrackingProps\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const alignToClassMap={left:\"vuiBaseButton--alignLeft\",center:\"vuiBaseButton--alignCenter\",right:\"vuiBaseButton--alignRight\"};export const BaseButton=/*#__PURE__*/forwardRef((_ref,ref)=>{let{children,icon,iconSide=\"left\",align=\"center\",className,size,fullWidth,onClick,tabIndex,isInert,isDisabled,href,target,track,htmlFor,isSubmit,...rest}=_ref;const classes=classNames(\"vuiBaseButton\",className,`vuiBaseButton--${size}`,alignToClassMap[align],{\"vuiBaseButton-isInert\":isInert,\"vuiBaseButton-isDisabled\":isDisabled,\"vuiBaseButton--fullWidth\":fullWidth,[`vuiBaseButton--${iconSide}`]:Boolean(icon)&&Boolean(children)});const iconContainer=icon?/*#__PURE__*/_jsx(\"span\",{className:\"vuiBaseButtonIconContainer\",children:icon}):null;// This is useful for controlling other elements, e.g. creating an <input type=\"file\" />\n// for uploading files and adding a button to trigger it.\nif(htmlFor){return/*#__PURE__*/_jsxs(\"label\",{htmlFor:htmlFor,className:classes,tabIndex:tabIndex,...rest,children:[iconContainer,children]});}if(href){const wrapperClasses=classNames(\"vuiBaseButtonLinkWrapper\",{\"vuiBaseButtonLinkWrapper--fullWidth\":fullWidth});return/*#__PURE__*/_jsx(Link,{className:wrapperClasses,to:href,onClick:onClick,target:target,tabIndex:tabIndex,...rest,...getTrackingProps(track),children:/*#__PURE__*/_jsxs(\"button\",{className:classes,tabIndex:-1,ref:ref,children:[iconContainer,children]})});}const props={onClick,tabIndex,[\"type\"]:isSubmit?\"submit\":undefined,...rest};return(/*#__PURE__*/// @ts-expect-error HTMLButtonElement conflict with HTMLAnchorElement\n_jsxs(\"button\",{className:classes,...props,ref:ref,children:[iconContainer,children]}));});","map":{"version":3,"names":["forwardRef","classNames","Link","getTrackingProps","jsx","_jsx","jsxs","_jsxs","alignToClassMap","left","center","right","BaseButton","_ref","ref","children","icon","iconSide","align","className","size","fullWidth","onClick","tabIndex","isInert","isDisabled","href","target","track","htmlFor","isSubmit","rest","classes","Boolean","iconContainer","wrapperClasses","to","props","undefined"],"sources":["/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/components/button/BaseButton.tsx"],"sourcesContent":["import { ReactElement, ReactNode, forwardRef } from \"react\";\nimport classNames from \"classnames\";\nimport { Props as LinkProps } from \"../link/Link\";\nimport { Link } from \"react-router-dom\";\nimport { getTrackingProps } from \"../../utils/getTrackingProps\";\nimport { BUTTON_SIZE } from \"./types\";\n\nconst alignToClassMap = {\n  left: \"vuiBaseButton--alignLeft\",\n  center: \"vuiBaseButton--alignCenter\",\n  right: \"vuiBaseButton--alignRight\"\n};\n\nexport type Props = {\n  children?: ReactNode;\n  icon?: ReactElement | null;\n  iconSide?: \"left\" | \"right\";\n  align?: \"left\" | \"center\" | \"right\";\n  className?: string;\n  size?: (typeof BUTTON_SIZE)[number];\n  fullWidth?: boolean;\n  isSelected?: boolean;\n  isInert?: boolean;\n  isDisabled?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement | HTMLAnchorElement, MouseEvent>) => void;\n  href?: LinkProps[\"href\"];\n  target?: LinkProps[\"target\"];\n  track?: LinkProps[\"track\"];\n  htmlFor?: string;\n  tabIndex?: number;\n  title?: string;\n  isSubmit?: boolean;\n};\n\nexport const BaseButton = forwardRef<HTMLButtonElement | null, Props>(\n  (\n    {\n      children,\n      icon,\n      iconSide = \"left\",\n      align = \"center\",\n      className,\n      size,\n      fullWidth,\n      onClick,\n      tabIndex,\n      isInert,\n      isDisabled,\n      href,\n      target,\n      track,\n      htmlFor,\n      isSubmit,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const classes = classNames(\"vuiBaseButton\", className, `vuiBaseButton--${size}`, alignToClassMap[align], {\n      \"vuiBaseButton-isInert\": isInert,\n      \"vuiBaseButton-isDisabled\": isDisabled,\n      \"vuiBaseButton--fullWidth\": fullWidth,\n      [`vuiBaseButton--${iconSide}`]: Boolean(icon) && Boolean(children)\n    });\n\n    const iconContainer = icon ? <span className=\"vuiBaseButtonIconContainer\">{icon}</span> : null;\n\n    // This is useful for controlling other elements, e.g. creating an <input type=\"file\" />\n    // for uploading files and adding a button to trigger it.\n    if (htmlFor) {\n      return (\n        <label htmlFor={htmlFor} className={classes} tabIndex={tabIndex} {...rest}>\n          {iconContainer}\n          {children}\n        </label>\n      );\n    }\n\n    if (href) {\n      const wrapperClasses = classNames(\"vuiBaseButtonLinkWrapper\", {\n        \"vuiBaseButtonLinkWrapper--fullWidth\": fullWidth\n      });\n\n      return (\n        <Link\n          className={wrapperClasses}\n          to={href}\n          onClick={onClick}\n          target={target}\n          tabIndex={tabIndex}\n          {...rest}\n          {...getTrackingProps(track)}\n        >\n          {/* Wrap a button otherwise the flex layout breaks */}\n          <button className={classes} tabIndex={-1} ref={ref}>\n            {iconContainer}\n            {children}\n          </button>\n        </Link>\n      );\n    }\n\n    const props = {\n      onClick,\n      tabIndex,\n      [\"type\"]: isSubmit ? \"submit\" : undefined,\n      ...rest\n    };\n\n    return (\n      // @ts-expect-error HTMLButtonElement conflict with HTMLAnchorElement\n      <button className={classes} {...props} ref={ref}>\n        {iconContainer}\n        {children}\n      </button>\n    );\n  }\n);\n"],"mappings":"AAAA,OAAkCA,UAAU,KAAQ,OAAO,CAC3D,MAAO,CAAAC,UAAU,KAAM,YAAY,CAEnC,OAASC,IAAI,KAAQ,kBAAkB,CACvC,OAASC,gBAAgB,KAAQ,8BAA8B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGhE,KAAM,CAAAC,eAAe,CAAG,CACtBC,IAAI,CAAE,0BAA0B,CAChCC,MAAM,CAAE,4BAA4B,CACpCC,KAAK,CAAE,2BACT,CAAC,CAuBD,MAAO,MAAM,CAAAC,UAAU,cAAGZ,UAAU,CAClC,CAAAa,IAAA,CAoBEC,GAAG,GACA,IApBH,CACEC,QAAQ,CACRC,IAAI,CACJC,QAAQ,CAAG,MAAM,CACjBC,KAAK,CAAG,QAAQ,CAChBC,SAAS,CACTC,IAAI,CACJC,SAAS,CACTC,OAAO,CACPC,QAAQ,CACRC,OAAO,CACPC,UAAU,CACVC,IAAI,CACJC,MAAM,CACNC,KAAK,CACLC,OAAO,CACPC,QAAQ,CACR,GAAGC,IACE,CAAC,CAAAlB,IAAA,CAGR,KAAM,CAAAmB,OAAO,CAAG/B,UAAU,CAAC,eAAe,CAAEkB,SAAS,CAAE,kBAAkBC,IAAI,EAAE,CAAEZ,eAAe,CAACU,KAAK,CAAC,CAAE,CACvG,uBAAuB,CAAEM,OAAO,CAChC,0BAA0B,CAAEC,UAAU,CACtC,0BAA0B,CAAEJ,SAAS,CACrC,CAAC,kBAAkBJ,QAAQ,EAAE,EAAGgB,OAAO,CAACjB,IAAI,CAAC,EAAIiB,OAAO,CAAClB,QAAQ,CACnE,CAAC,CAAC,CAEF,KAAM,CAAAmB,aAAa,CAAGlB,IAAI,cAAGX,IAAA,SAAMc,SAAS,CAAC,4BAA4B,CAAAJ,QAAA,CAAEC,IAAI,CAAO,CAAC,CAAG,IAAI,CAE9F;AACA;AACA,GAAIa,OAAO,CAAE,CACX,mBACEtB,KAAA,UAAOsB,OAAO,CAAEA,OAAQ,CAACV,SAAS,CAAEa,OAAQ,CAACT,QAAQ,CAAEA,QAAS,IAAKQ,IAAI,CAAAhB,QAAA,EACtEmB,aAAa,CACbnB,QAAQ,EACJ,CAAC,CAEZ,CAEA,GAAIW,IAAI,CAAE,CACR,KAAM,CAAAS,cAAc,CAAGlC,UAAU,CAAC,0BAA0B,CAAE,CAC5D,qCAAqC,CAAEoB,SACzC,CAAC,CAAC,CAEF,mBACEhB,IAAA,CAACH,IAAI,EACHiB,SAAS,CAAEgB,cAAe,CAC1BC,EAAE,CAAEV,IAAK,CACTJ,OAAO,CAAEA,OAAQ,CACjBK,MAAM,CAAEA,MAAO,CACfJ,QAAQ,CAAEA,QAAS,IACfQ,IAAI,IACJ5B,gBAAgB,CAACyB,KAAK,CAAC,CAAAb,QAAA,cAG3BR,KAAA,WAAQY,SAAS,CAAEa,OAAQ,CAACT,QAAQ,CAAE,CAAC,CAAE,CAACT,GAAG,CAAEA,GAAI,CAAAC,QAAA,EAChDmB,aAAa,CACbnB,QAAQ,EACH,CAAC,CACL,CAAC,CAEX,CAEA,KAAM,CAAAsB,KAAK,CAAG,CACZf,OAAO,CACPC,QAAQ,CACR,CAAC,MAAM,EAAGO,QAAQ,CAAG,QAAQ,CAAGQ,SAAS,CACzC,GAAGP,IACL,CAAC,CAED,oBACE;AACAxB,KAAA,WAAQY,SAAS,CAAEa,OAAQ,IAAKK,KAAK,CAAEvB,GAAG,CAAEA,GAAI,CAAAC,QAAA,EAC7CmB,aAAa,CACbnB,QAAQ,EACH,CAAC,EAEb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}