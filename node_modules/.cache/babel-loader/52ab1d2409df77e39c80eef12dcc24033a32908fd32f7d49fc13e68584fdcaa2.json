{"ast":null,"code":"import{useEffect,useState}from\"react\";import{VuiOptionsList}from\"../optionsList/OptionsList\";import{VuiPopover}from\"../popover/Popover\";import{VuiTextInput}from\"../form\";import{VuiSpacer}from\"../spacer/Spacer\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// https://github.com/typescript-eslint/typescript-eslint/issues/4062\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-type-constraint\nexport const VuiSearchSelect=_ref=>{let{children,title,isOpen,setIsOpen,options,onSelect,isMultiSelect=true,selected=[]}=_ref;const[searchValue,setSearchValue]=useState(\"\");const[selectedOptions,setSelectedOptions]=useState();const[orderedOptions,setOrderedOptions]=useState([]);useEffect(()=>{// When the popover is opened, initialize the selected options,\n// and sort the options so the selected ones are on top.\nif(isOpen){const selectedOptionsCopy=selected.concat();setSelectedOptions(selectedOptionsCopy);const sortedOptions=options.concat().sort((first,second)=>{const isFirstSelected=selectedOptionsCopy.includes(first.value);const isSecondSelected=selectedOptionsCopy.includes(second.value);if(isFirstSelected&&!isSecondSelected){return-1;}if(!isFirstSelected&&isSecondSelected){return 1;}return 0;});setOrderedOptions(sortedOptions);}},[isOpen]);const updateOpen=()=>{if(isOpen){// When the popover is closed, notify the consumer of the\n// selected options.\nonSelect(selectedOptions!==null&&selectedOptions!==void 0?selectedOptions:[]);// Signal the popover to be closed. We don't depend on the\n// original isOpen because it will cause a flicker when the\n// options are sorted.\nsetSelectedOptions(undefined);}setIsOpen(!isOpen);};const onSelectOption=value=>{if(isMultiSelect){setSelectedOptions(prev=>{if(!prev)return[];const updated=prev.concat();const index=prev.findIndex(item=>item===value);if(index!==-1){updated.splice(index,1);return updated;}updated.push(value);return updated;});return;}// If the user can only select one option at a time,\n// close the search select as soon as they make a choice.\nonSelect([value]);// Signal the popover to be closed. We don't depend on the\n// original isOpen because it will cause a flicker when the\n// options are sorted.\nsetSelectedOptions(undefined);setIsOpen(false);};const visibleOptions=orderedOptions.filter(option=>{if(!searchValue.trim())return true;if(option.label.toLowerCase().includes(searchValue.toLowerCase()))return true;return false;});return/*#__PURE__*/_jsxs(VuiPopover,{isOpen:selectedOptions!==undefined,setIsOpen:updateOpen,button:children,header:title,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"vuiSearchSelect__search\",children:[/*#__PURE__*/_jsx(VuiTextInput,{placeholder:\"Search\",value:searchValue,onChange:event=>setSearchValue(event.target.value)}),/*#__PURE__*/_jsx(VuiSpacer,{size:\"xxs\"})]}),/*#__PURE__*/_jsx(VuiOptionsList,{isSelectable:true,isScrollable:true,onSelectOption:onSelectOption,selected:selectedOptions,options:visibleOptions})]});};","map":{"version":3,"names":["useEffect","useState","VuiOptionsList","VuiPopover","VuiTextInput","VuiSpacer","jsx","_jsx","jsxs","_jsxs","VuiSearchSelect","_ref","children","title","isOpen","setIsOpen","options","onSelect","isMultiSelect","selected","searchValue","setSearchValue","selectedOptions","setSelectedOptions","orderedOptions","setOrderedOptions","selectedOptionsCopy","concat","sortedOptions","sort","first","second","isFirstSelected","includes","value","isSecondSelected","updateOpen","undefined","onSelectOption","prev","updated","index","findIndex","item","splice","push","visibleOptions","filter","option","trim","label","toLowerCase","button","header","className","placeholder","onChange","event","target","size","isSelectable","isScrollable"],"sources":["/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/components/searchSelect/SearchSelect.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Props as OptionsListProps, VuiOptionsList } from \"../optionsList/OptionsList\";\nimport { Props as PopoverProps, VuiPopover } from \"../popover/Popover\";\nimport { OptionListItem } from \"../optionsList/types\";\nimport { VuiTextInput } from \"../form\";\nimport { VuiSpacer } from \"../spacer/Spacer\";\n\ntype Props<T> = Pick<PopoverProps, \"isOpen\" | \"setIsOpen\"> &\n  Pick<OptionsListProps<T>, \"options\"> & {\n    children: PopoverProps[\"button\"];\n    title?: string;\n    selected: T[];\n    onSelect: (selected: T[]) => void;\n    isMultiSelect?: boolean;\n  };\n\n// https://github.com/typescript-eslint/typescript-eslint/issues/4062\n// eslint-disable-next-line @typescript-eslint/no-unnecessary-type-constraint\nexport const VuiSearchSelect = <T extends unknown = unknown>({\n  children,\n  title,\n  isOpen,\n  setIsOpen,\n  options,\n  onSelect,\n  isMultiSelect = true,\n  selected = []\n}: Props<T>) => {\n  const [searchValue, setSearchValue] = useState<string>(\"\");\n  const [selectedOptions, setSelectedOptions] = useState<T[]>();\n  const [orderedOptions, setOrderedOptions] = useState<OptionListItem<T>[]>([]);\n\n  useEffect(() => {\n    // When the popover is opened, initialize the selected options,\n    // and sort the options so the selected ones are on top.\n    if (isOpen) {\n      const selectedOptionsCopy = selected.concat();\n      setSelectedOptions(selectedOptionsCopy);\n\n      const sortedOptions = options.concat().sort((first, second) => {\n        const isFirstSelected = selectedOptionsCopy.includes(first.value);\n        const isSecondSelected = selectedOptionsCopy.includes(second.value);\n        if (isFirstSelected && !isSecondSelected) {\n          return -1;\n        }\n\n        if (!isFirstSelected && isSecondSelected) {\n          return 1;\n        }\n\n        return 0;\n      });\n\n      setOrderedOptions(sortedOptions);\n    }\n  }, [isOpen]);\n\n  const updateOpen = () => {\n    if (isOpen) {\n      // When the popover is closed, notify the consumer of the\n      // selected options.\n      onSelect(selectedOptions ?? []);\n\n      // Signal the popover to be closed. We don't depend on the\n      // original isOpen because it will cause a flicker when the\n      // options are sorted.\n      setSelectedOptions(undefined);\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  const onSelectOption = (value: T) => {\n    if (isMultiSelect) {\n      setSelectedOptions((prev) => {\n        if (!prev) return [];\n\n        const updated = prev.concat();\n        const index = prev.findIndex((item) => item === value);\n\n        if (index !== -1) {\n          updated.splice(index, 1);\n          return updated;\n        }\n\n        updated.push(value);\n        return updated;\n      });\n\n      return;\n    }\n\n    // If the user can only select one option at a time,\n    // close the search select as soon as they make a choice.\n    onSelect([value]);\n\n    // Signal the popover to be closed. We don't depend on the\n    // original isOpen because it will cause a flicker when the\n    // options are sorted.\n    setSelectedOptions(undefined);\n    setIsOpen(false);\n  };\n\n  const visibleOptions = orderedOptions.filter((option) => {\n    if (!searchValue.trim()) return true;\n    if (option.label.toLowerCase().includes(searchValue.toLowerCase())) return true;\n    return false;\n  });\n\n  return (\n    <VuiPopover isOpen={selectedOptions !== undefined} setIsOpen={updateOpen} button={children} header={title}>\n      <div className=\"vuiSearchSelect__search\">\n        <VuiTextInput\n          placeholder=\"Search\"\n          value={searchValue}\n          onChange={(event) => setSearchValue(event.target.value)}\n        />\n        <VuiSpacer size=\"xxs\" />\n      </div>\n\n      <VuiOptionsList\n        isSelectable\n        isScrollable\n        onSelectOption={onSelectOption}\n        selected={selectedOptions}\n        options={visibleOptions}\n      />\n    </VuiPopover>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}