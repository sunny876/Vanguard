{"ast":null,"code":"export const reorderCitations = unorderedSummary => {\n  const allCitations = unorderedSummary.match(/\\[\\d+\\]/g) || [];\n  const uniqueCitations = [...new Set(allCitations)];\n  const citationToReplacement = {};\n  uniqueCitations.forEach((citation, index) => {\n    citationToReplacement[citation] = `[${index + 1}]`;\n  });\n  return unorderedSummary.replace(/\\[\\d+\\]/g, match => citationToReplacement[match]);\n};","map":{"version":3,"names":["reorderCitations","unorderedSummary","allCitations","match","uniqueCitations","Set","citationToReplacement","forEach","citation","index","replace"],"sources":["/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/utils/citations/reorderCitations.ts"],"sourcesContent":["export const reorderCitations = (unorderedSummary: string) => {\n  const allCitations = unorderedSummary.match(/\\[\\d+\\]/g) || [];\n\n  const uniqueCitations = [...new Set(allCitations)];\n  const citationToReplacement: { [key: string]: string } = {};\n  uniqueCitations.forEach((citation, index) => {\n    citationToReplacement[citation] = `[${index + 1}]`;\n  });\n\n  return unorderedSummary.replace(\n    /\\[\\d+\\]/g,\n    (match) => citationToReplacement[match]\n  );\n};\n"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAIC,gBAAwB,IAAK;EAC5D,MAAMC,YAAY,GAAGD,gBAAgB,CAACE,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE;EAE7D,MAAMC,eAAe,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACH,YAAY,CAAC,CAAC;EAClD,MAAMI,qBAAgD,GAAG,CAAC,CAAC;EAC3DF,eAAe,CAACG,OAAO,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;IAC3CH,qBAAqB,CAACE,QAAQ,CAAC,GAAG,IAAIC,KAAK,GAAG,CAAC,GAAG;EACpD,CAAC,CAAC;EAEF,OAAOR,gBAAgB,CAACS,OAAO,CAC7B,UAAU,EACTP,KAAK,IAAKG,qBAAqB,CAACH,KAAK,CACxC,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}