{"ast":null,"code":"import{useEffect,useRef}from\"react\";import classNames from\"classnames\";import{FocusOn}from\"react-focus-on\";import{VuiFlexContainer}from\"../flex/FlexContainer\";import{VuiFlexItem}from\"../flex/FlexItem\";import{VuiIconButton}from\"../button/IconButton\";import{VuiIcon}from\"../icon/Icon\";import{BiX}from\"react-icons/bi\";import{VuiPortal}from\"../portal/Portal\";import{VuiScreenBlock}from\"../screenBlock/ScreenBlock\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const COLOR=[\"primary\",\"danger\"];export const VuiModal=_ref=>{let{className,color=\"primary\",title,children,isOpen,onClose,...rest}=_ref;const returnFocusElRef=useRef(null);// Return focus on unmount.\nuseEffect(()=>{if(isOpen){returnFocusElRef.current=document.activeElement;}else{var _returnFocusElRef$cur;(_returnFocusElRef$cur=returnFocusElRef.current)===null||_returnFocusElRef$cur===void 0?void 0:_returnFocusElRef$cur.focus();returnFocusElRef.current=null;}},[isOpen]);// Allow contents to respond to blur events before unmounting.\nconst onCloseDelayed=()=>{window.setTimeout(()=>{onClose===null||onClose===void 0?void 0:onClose();},0);};const classes=classNames(\"vuiModal\",`vuiModal--${color}`,className);return/*#__PURE__*/_jsx(VuiPortal,{children:isOpen&&/*#__PURE__*/_jsx(VuiScreenBlock,{children:/*#__PURE__*/_jsx(FocusOn,{onEscapeKey:onCloseDelayed,onClickOutside:onCloseDelayed// Enable manual focus return to work.\n,returnFocus:false// Enable focus on contents when it's open,\n// but enable manual focus return to work when it's closed.\n,autoFocus:isOpen,children:/*#__PURE__*/_jsx(\"div\",{className:\"vuiModalContainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:classes,...rest,children:[/*#__PURE__*/_jsx(\"div\",{className:\"vuiModalHeader\",children:/*#__PURE__*/_jsxs(VuiFlexContainer,{justifyContent:\"spaceBetween\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(VuiFlexItem,{grow:false,children:title}),onClose&&/*#__PURE__*/_jsx(VuiFlexItem,{children:/*#__PURE__*/_jsx(VuiIconButton,{onClick:onCloseDelayed,color:\"neutral\",icon:/*#__PURE__*/_jsx(VuiIcon,{size:\"m\",color:\"neutral\",children:/*#__PURE__*/_jsx(BiX,{})})})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"vuiModalContent\",children:/*#__PURE__*/_jsx(\"div\",{className:\"vuiModalContent__inner\",children:children})})]})})})})});};","map":{"version":3,"names":["useEffect","useRef","classNames","FocusOn","VuiFlexContainer","VuiFlexItem","VuiIconButton","VuiIcon","BiX","VuiPortal","VuiScreenBlock","jsx","_jsx","jsxs","_jsxs","COLOR","VuiModal","_ref","className","color","title","children","isOpen","onClose","rest","returnFocusElRef","current","document","activeElement","_returnFocusElRef$cur","focus","onCloseDelayed","window","setTimeout","classes","onEscapeKey","onClickOutside","returnFocus","autoFocus","justifyContent","alignItems","grow","onClick","icon","size"],"sources":["/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/components/modal/Modal.tsx"],"sourcesContent":["import { ReactNode, useEffect, useRef } from \"react\";\nimport classNames from \"classnames\";\nimport { FocusOn } from \"react-focus-on\";\nimport { VuiFlexContainer } from \"../flex/FlexContainer\";\nimport { VuiFlexItem } from \"../flex/FlexItem\";\nimport { VuiIconButton } from \"../button/IconButton\";\nimport { VuiIcon } from \"../icon/Icon\";\nimport { BiX } from \"react-icons/bi\";\nimport { VuiPortal } from \"../portal/Portal\";\nimport { VuiScreenBlock } from \"../screenBlock/ScreenBlock\";\n\nconst COLOR = [\"primary\", \"danger\"] as const;\n\ntype Props = {\n  className?: string;\n  title: ReactNode;\n  children: ReactNode;\n  isOpen?: boolean;\n  onClose?: () => void;\n  color?: (typeof COLOR)[number];\n};\n\nexport const VuiModal = ({ className, color = \"primary\", title, children, isOpen, onClose, ...rest }: Props) => {\n  const returnFocusElRef = useRef<HTMLElement | null>(null);\n\n  // Return focus on unmount.\n  useEffect(() => {\n    if (isOpen) {\n      returnFocusElRef.current = document.activeElement as HTMLElement;\n    } else {\n      returnFocusElRef.current?.focus();\n      returnFocusElRef.current = null;\n    }\n  }, [isOpen]);\n\n  // Allow contents to respond to blur events before unmounting.\n  const onCloseDelayed = () => {\n    window.setTimeout(() => {\n      onClose?.();\n    }, 0);\n  };\n\n  const classes = classNames(\"vuiModal\", `vuiModal--${color}`, className);\n\n  return (\n    <VuiPortal>\n      {isOpen && (\n        <VuiScreenBlock>\n          <FocusOn\n            onEscapeKey={onCloseDelayed}\n            onClickOutside={onCloseDelayed}\n            // Enable manual focus return to work.\n            returnFocus={false}\n            // Enable focus on contents when it's open,\n            // but enable manual focus return to work when it's closed.\n            autoFocus={isOpen}\n          >\n            <div className=\"vuiModalContainer\">\n              <div className={classes} {...rest}>\n                <div className=\"vuiModalHeader\">\n                  <VuiFlexContainer justifyContent=\"spaceBetween\" alignItems=\"center\">\n                    <VuiFlexItem grow={false}>{title}</VuiFlexItem>\n\n                    {onClose && (\n                      <VuiFlexItem>\n                        <VuiIconButton\n                          onClick={onCloseDelayed}\n                          color=\"neutral\"\n                          icon={\n                            <VuiIcon size=\"m\" color=\"neutral\">\n                              <BiX />\n                            </VuiIcon>\n                          }\n                        />\n                      </VuiFlexItem>\n                    )}\n                  </VuiFlexContainer>\n                </div>\n\n                <div className=\"vuiModalContent\">\n                  <div className=\"vuiModalContent__inner\">{children}</div>\n                </div>\n              </div>\n            </div>\n          </FocusOn>\n        </VuiScreenBlock>\n      )}\n    </VuiPortal>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}