{"ast":null,"code":"var _jsxFileName = \"/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/components/app/appSideNav/AppSideNav.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { BiChevronLeft, BiChevronRight } from \"react-icons/bi\";\nimport { VuiIconButton } from \"../../button/IconButton\";\nimport { VuiIcon } from \"../../icon/Icon\";\nimport { buildSections } from \"./AppSideNavSections\";\nimport { buildTree } from \"./AppSideNavTree\";\nimport { VuiFlexContainer } from \"../../flex/FlexContainer\";\nimport { VuiFlexItem } from \"../../flex/FlexItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const buildSideNavItems = items => {\n  return isTree(items) ? buildTree(items) : buildSections(items);\n};\n\n// Type guard to determine if we have a Tree or Sections.\nconst isTree = items => {\n  return items.findIndex(item => item.path) !== -1;\n};\nexport const VuiAppSideNav = ({\n  items = [],\n  content\n}) => {\n  _s();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const collapseButtonRef = useRef(null);\n  const expandButtonRef = useRef(null);\n  useEffect(() => {\n    // Prevent the button from being focused when it first renders.\n    if (isTouched) {\n      if (isCollapsed) {\n        var _expandButtonRef$curr;\n        (_expandButtonRef$curr = expandButtonRef.current) === null || _expandButtonRef$curr === void 0 ? void 0 : _expandButtonRef$curr.focus();\n      } else {\n        var _collapseButtonRef$cu;\n        (_collapseButtonRef$cu = collapseButtonRef.current) === null || _collapseButtonRef$cu === void 0 ? void 0 : _collapseButtonRef$cu.focus();\n      }\n    }\n  }, [isTouched, isCollapsed]);\n  const classes = classNames(\"vuiAppSideNav\", {\n    \"vuiAppSideNav-isCollapsed\": isCollapsed\n  });\n  const contentClasses = classNames(\"vuiAppSideNavContent\", {\n    \"vuiAppSideNavContent-isHidden\": isCollapsed\n  });\n  const navItems = buildSideNavItems(items);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vuiAppSideNav__inner\",\n      children: [isCollapsed ? /*#__PURE__*/_jsxDEV(VuiIconButton, {\n        ref: expandButtonRef,\n        \"aria-label\": \"Expand nav\",\n        onClick: () => setIsCollapsed(false),\n        className: \"vuiAppSideNavExpandButton\",\n        color: \"neutral\",\n        icon: /*#__PURE__*/_jsxDEV(VuiIcon, {\n          children: /*#__PURE__*/_jsxDEV(BiChevronRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: collapseButtonRef,\n          className: \"vuiAppSideNavCollapseButton\",\n          onClick: () => {\n            setIsTouched(true);\n            setIsCollapsed(true);\n          },\n          children: /*#__PURE__*/_jsxDEV(VuiFlexContainer, {\n            alignItems: \"center\",\n            spacing: \"xxs\",\n            children: [/*#__PURE__*/_jsxDEV(VuiFlexItem, {\n              shrink: false,\n              grow: false,\n              children: /*#__PURE__*/_jsxDEV(VuiIcon, {\n                children: /*#__PURE__*/_jsxDEV(BiChevronLeft, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(VuiFlexItem, {\n              shrink: false,\n              grow: false,\n              children: \"Collapse nav\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: contentClasses,\n        inert: isCollapsed ? \"\" : null,\n        children: [navItems, content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(VuiAppSideNav, \"9oKQxCTMv+3CmiABfMlaTgPORG8=\");\n_c = VuiAppSideNav;\nvar _c;\n$RefreshReg$(_c, \"VuiAppSideNav\");","map":{"version":3,"names":["useEffect","useRef","useState","classNames","BiChevronLeft","BiChevronRight","VuiIconButton","VuiIcon","buildSections","buildTree","VuiFlexContainer","VuiFlexItem","jsxDEV","_jsxDEV","Fragment","_Fragment","buildSideNavItems","items","isTree","findIndex","item","path","VuiAppSideNav","content","_s","isTouched","setIsTouched","isCollapsed","setIsCollapsed","collapseButtonRef","expandButtonRef","_expandButtonRef$curr","current","focus","_collapseButtonRef$cu","classes","contentClasses","navItems","className","children","ref","onClick","color","icon","fileName","_jsxFileName","lineNumber","columnNumber","alignItems","spacing","shrink","grow","inert","_c","$RefreshReg$"],"sources":["/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/components/app/appSideNav/AppSideNav.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { BiChevronLeft, BiChevronRight } from \"react-icons/bi\";\nimport { VuiIconButton } from \"../../button/IconButton\";\nimport { VuiIcon } from \"../../icon/Icon\";\nimport { buildSections } from \"./AppSideNavSections\";\nimport { buildTree } from \"./AppSideNavTree\";\nimport { Sections, Tree } from \"../types\";\nimport { VuiFlexContainer } from \"../../flex/FlexContainer\";\nimport { VuiFlexItem } from \"../../flex/FlexItem\";\n\nexport const buildSideNavItems = (items: Sections | Tree) => {\n  return isTree(items) ? buildTree(items) : buildSections(items);\n};\n\n// Type guard to determine if we have a Tree or Sections.\nconst isTree = (items: Tree | Sections): items is Tree => {\n  return (items as Tree).findIndex((item) => item.path) !== -1;\n};\n\nexport type Props = {\n  items?: Sections | Tree;\n  content?: React.ReactNode;\n};\n\nexport const VuiAppSideNav = ({ items = [], content }: Props) => {\n  const [isTouched, setIsTouched] = useState(false);\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const collapseButtonRef = useRef<HTMLButtonElement>(null);\n  const expandButtonRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    // Prevent the button from being focused when it first renders.\n    if (isTouched) {\n      if (isCollapsed) {\n        expandButtonRef.current?.focus();\n      } else {\n        collapseButtonRef.current?.focus();\n      }\n    }\n  }, [isTouched, isCollapsed]);\n\n  const classes = classNames(\"vuiAppSideNav\", {\n    \"vuiAppSideNav-isCollapsed\": isCollapsed\n  });\n\n  const contentClasses = classNames(\"vuiAppSideNavContent\", {\n    \"vuiAppSideNavContent-isHidden\": isCollapsed\n  });\n\n  const navItems = buildSideNavItems(items);\n\n  return (\n    <div className={classes}>\n      <div className=\"vuiAppSideNav__inner\">\n        {isCollapsed ? (\n          <VuiIconButton\n            ref={expandButtonRef}\n            aria-label=\"Expand nav\"\n            onClick={() => setIsCollapsed(false)}\n            className=\"vuiAppSideNavExpandButton\"\n            color=\"neutral\"\n            icon={\n              <VuiIcon>\n                <BiChevronRight />\n              </VuiIcon>\n            }\n          />\n        ) : (\n          <>\n            <button\n              ref={collapseButtonRef}\n              className=\"vuiAppSideNavCollapseButton\"\n              onClick={() => {\n                setIsTouched(true);\n                setIsCollapsed(true);\n              }}\n            >\n              <VuiFlexContainer alignItems=\"center\" spacing=\"xxs\">\n                <VuiFlexItem shrink={false} grow={false}>\n                  <VuiIcon>\n                    <BiChevronLeft />\n                  </VuiIcon>\n                </VuiFlexItem>\n\n                <VuiFlexItem shrink={false} grow={false}>\n                  Collapse nav\n                </VuiFlexItem>\n              </VuiFlexContainer>\n            </button>\n          </>\n        )}\n\n        {/* @ts-expect-error React doesn't support inert yet */}\n        <div className={contentClasses} inert={isCollapsed ? \"\" : null}>\n          {navItems}\n          {content}\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}