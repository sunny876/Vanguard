{"ast":null,"code":"var _jsxFileName = \"/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/components/popover/Popover.tsx\",\n  _s = $RefreshSig$();\nimport React, { cloneElement, useEffect, useRef, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { VuiPortal } from \"../portal/Portal\";\nimport { FocusOn } from \"react-focus-on\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getPosition = button => {\n  if (!button) return undefined;\n  const {\n    bottom,\n    right\n  } = button.getBoundingClientRect();\n  return {\n    top: bottom + 2 + document.documentElement.scrollTop,\n    right: window.innerWidth - right\n  };\n};\nexport const VuiPopover = ({\n  button: originalButton,\n  children,\n  className,\n  header,\n  isOpen,\n  setIsOpen,\n  padding,\n  ...rest\n}) => {\n  _s();\n  const returnFocusElRef = useRef(null);\n  const buttonRef = useRef(null);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [positionMarker, setPositionMarker] = useState(0);\n  const button = /*#__PURE__*/cloneElement(originalButton, {\n    isSelected: isOpen,\n    onClick: () => {\n      setIsOpen(!isOpen);\n    },\n    ref: node => {\n      buttonRef.current = node;\n    }\n  });\n  useEffect(() => {\n    const updatePosition = () => {\n      // Force a re-render when the window resizes.\n      setPositionMarker(Date.now());\n    };\n    window.removeEventListener(\"resize\", updatePosition);\n    // Mostly defensive to prevent weird bugs where the popover ends\n    // up being rendered partially off-screen.\n    window.removeEventListener(\"scroll\", updatePosition);\n    return () => {\n      window.removeEventListener(\"resize\", updatePosition);\n      window.removeEventListener(\"scroll\", updatePosition);\n    };\n  }, []);\n  useEffect(() => {\n    if (isOpen) {\n      returnFocusElRef.current = document.activeElement;\n    } else {\n      var _returnFocusElRef$cur;\n      (_returnFocusElRef$cur = returnFocusElRef.current) === null || _returnFocusElRef$cur === void 0 ? void 0 : _returnFocusElRef$cur.focus();\n      returnFocusElRef.current = null;\n    }\n  }, [isOpen]);\n\n  // Allow contents to respond to blur events before unmounting, and also\n  // enable focus to properly return to the button when the user clicks\n  // outside of the popover.\n  const onCloseDelayed = () => {\n    window.setTimeout(() => {\n      setIsOpen(false);\n    }, 0);\n  };\n\n  // Always keep menu position up to date. If we tried to cache this inside\n  // a useEffect based on isOpen then there'd be a flicker if the width\n  // of the button changes.\n  const position = getPosition(buttonRef.current);\n  const classes = classNames(\"vuiPopover\", className);\n  const contentClasses = classNames(\"vuiPopoverContent\", {\n    \"vuiPopoverContent--padding\": padding\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [button, /*#__PURE__*/_jsxDEV(VuiPortal, {\n      children: isOpen && position && /*#__PURE__*/_jsxDEV(FocusOn, {\n        onEscapeKey: onCloseDelayed,\n        onClickOutside: onCloseDelayed\n        // Enable manual focus return to work.\n        ,\n        returnFocus: false\n        // Enable focus on contents when it's open,\n        // but enable manual focus return to work when it's closed.\n        ,\n        autoFocus: isOpen\n        // Enable scrolling of the page.\n        ,\n        scrollLock: false\n        // Enable scrolling of the page.\n        ,\n        preventScrollOnFocus: false,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes,\n          style: {\n            top: `${position.top}px`,\n            right: `${position.right}px`\n          },\n          ...rest,\n          children: [header && typeof header === \"string\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vuiPopoverTitle\",\n            children: header\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 55\n          }, this) : header, children && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: contentClasses,\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(VuiPopover, \"t2DP6KTU20tbdFnoqCCEQrd/PBg=\");\n_c = VuiPopover;\nvar _c;\n$RefreshReg$(_c, \"VuiPopover\");","map":{"version":3,"names":["React","cloneElement","useEffect","useRef","useState","classNames","VuiPortal","FocusOn","jsxDEV","_jsxDEV","Fragment","_Fragment","getPosition","button","undefined","bottom","right","getBoundingClientRect","top","document","documentElement","scrollTop","window","innerWidth","VuiPopover","originalButton","children","className","header","isOpen","setIsOpen","padding","rest","_s","returnFocusElRef","buttonRef","positionMarker","setPositionMarker","isSelected","onClick","ref","node","current","updatePosition","Date","now","removeEventListener","activeElement","_returnFocusElRef$cur","focus","onCloseDelayed","setTimeout","position","classes","contentClasses","onEscapeKey","onClickOutside","returnFocus","autoFocus","scrollLock","preventScrollOnFocus","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/components/popover/Popover.tsx"],"sourcesContent":["import React, { cloneElement, useEffect, useRef, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { VuiPortal } from \"../portal/Portal\";\nimport { FocusOn } from \"react-focus-on\";\n\nexport type Props = {\n  button: React.ReactElement;\n  children?: React.ReactNode;\n  className?: string;\n  header?: React.ReactNode;\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  padding?: boolean;\n};\n\ntype Position = {\n  top: number;\n  right: number;\n};\n\nconst getPosition = (button: HTMLElement | null): Position | undefined => {\n  if (!button) return undefined;\n  const { bottom, right } = button.getBoundingClientRect();\n  return {\n    top: bottom + 2 + document.documentElement.scrollTop,\n    right: window.innerWidth - right\n  };\n};\n\nexport const VuiPopover = ({\n  button: originalButton,\n  children,\n  className,\n  header,\n  isOpen,\n  setIsOpen,\n  padding,\n  ...rest\n}: Props) => {\n  const returnFocusElRef = useRef<HTMLElement | null>(null);\n  const buttonRef = useRef<HTMLElement | null>(null);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [positionMarker, setPositionMarker] = useState<number>(0);\n\n  const button = cloneElement(originalButton, {\n    isSelected: isOpen,\n    onClick: () => {\n      setIsOpen(!isOpen);\n    },\n    ref: (node: HTMLElement) => {\n      buttonRef.current = node;\n    }\n  });\n\n  useEffect(() => {\n    const updatePosition = () => {\n      // Force a re-render when the window resizes.\n      setPositionMarker(Date.now());\n    };\n\n    window.removeEventListener(\"resize\", updatePosition);\n    // Mostly defensive to prevent weird bugs where the popover ends\n    // up being rendered partially off-screen.\n    window.removeEventListener(\"scroll\", updatePosition);\n\n    return () => {\n      window.removeEventListener(\"resize\", updatePosition);\n      window.removeEventListener(\"scroll\", updatePosition);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isOpen) {\n      returnFocusElRef.current = document.activeElement as HTMLElement;\n    } else {\n      returnFocusElRef.current?.focus();\n      returnFocusElRef.current = null;\n    }\n  }, [isOpen]);\n\n  // Allow contents to respond to blur events before unmounting, and also\n  // enable focus to properly return to the button when the user clicks\n  // outside of the popover.\n  const onCloseDelayed = () => {\n    window.setTimeout(() => {\n      setIsOpen(false);\n    }, 0);\n  };\n\n  // Always keep menu position up to date. If we tried to cache this inside\n  // a useEffect based on isOpen then there'd be a flicker if the width\n  // of the button changes.\n  const position = getPosition(buttonRef.current);\n\n  const classes = classNames(\"vuiPopover\", className);\n\n  const contentClasses = classNames(\"vuiPopoverContent\", {\n    \"vuiPopoverContent--padding\": padding\n  });\n\n  return (\n    <>\n      {button}\n\n      <VuiPortal>\n        {isOpen && position && (\n          <FocusOn\n            onEscapeKey={onCloseDelayed}\n            onClickOutside={onCloseDelayed}\n            // Enable manual focus return to work.\n            returnFocus={false}\n            // Enable focus on contents when it's open,\n            // but enable manual focus return to work when it's closed.\n            autoFocus={isOpen}\n            // Enable scrolling of the page.\n            scrollLock={false}\n            // Enable scrolling of the page.\n            preventScrollOnFocus={false}\n          >\n            <div className={classes} style={{ top: `${position.top}px`, right: `${position.right}px` }} {...rest}>\n              {header && typeof header === \"string\" ? <div className=\"vuiPopoverTitle\">{header}</div> : header}\n              {children && <div className={contentClasses}>{children}</div>}\n            </div>\n          </FocusOn>\n        )}\n      </VuiPortal>\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxE,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,OAAO,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAiBzC,MAAMC,WAAW,GAAIC,MAA0B,IAA2B;EACxE,IAAI,CAACA,MAAM,EAAE,OAAOC,SAAS;EAC7B,MAAM;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGH,MAAM,CAACI,qBAAqB,CAAC,CAAC;EACxD,OAAO;IACLC,GAAG,EAAEH,MAAM,GAAG,CAAC,GAAGI,QAAQ,CAACC,eAAe,CAACC,SAAS;IACpDL,KAAK,EAAEM,MAAM,CAACC,UAAU,GAAGP;EAC7B,CAAC;AACH,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAGA,CAAC;EACzBX,MAAM,EAAEY,cAAc;EACtBC,QAAQ;EACRC,SAAS;EACTC,MAAM;EACNC,MAAM;EACNC,SAAS;EACTC,OAAO;EACP,GAAGC;AACE,CAAC,KAAK;EAAAC,EAAA;EACX,MAAMC,gBAAgB,GAAG/B,MAAM,CAAqB,IAAI,CAAC;EACzD,MAAMgC,SAAS,GAAGhC,MAAM,CAAqB,IAAI,CAAC;EAClD;EACA,MAAM,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAS,CAAC,CAAC;EAE/D,MAAMS,MAAM,gBAAGZ,YAAY,CAACwB,cAAc,EAAE;IAC1Ca,UAAU,EAAET,MAAM;IAClBU,OAAO,EAAEA,CAAA,KAAM;MACbT,SAAS,CAAC,CAACD,MAAM,CAAC;IACpB,CAAC;IACDW,GAAG,EAAGC,IAAiB,IAAK;MAC1BN,SAAS,CAACO,OAAO,GAAGD,IAAI;IAC1B;EACF,CAAC,CAAC;EAEFvC,SAAS,CAAC,MAAM;IACd,MAAMyC,cAAc,GAAGA,CAAA,KAAM;MAC3B;MACAN,iBAAiB,CAACO,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;IAC/B,CAAC;IAEDvB,MAAM,CAACwB,mBAAmB,CAAC,QAAQ,EAAEH,cAAc,CAAC;IACpD;IACA;IACArB,MAAM,CAACwB,mBAAmB,CAAC,QAAQ,EAAEH,cAAc,CAAC;IAEpD,OAAO,MAAM;MACXrB,MAAM,CAACwB,mBAAmB,CAAC,QAAQ,EAAEH,cAAc,CAAC;MACpDrB,MAAM,CAACwB,mBAAmB,CAAC,QAAQ,EAAEH,cAAc,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENzC,SAAS,CAAC,MAAM;IACd,IAAI2B,MAAM,EAAE;MACVK,gBAAgB,CAACQ,OAAO,GAAGvB,QAAQ,CAAC4B,aAA4B;IAClE,CAAC,MAAM;MAAA,IAAAC,qBAAA;MACL,CAAAA,qBAAA,GAAAd,gBAAgB,CAACQ,OAAO,cAAAM,qBAAA,uBAAxBA,qBAAA,CAA0BC,KAAK,CAAC,CAAC;MACjCf,gBAAgB,CAACQ,OAAO,GAAG,IAAI;IACjC;EACF,CAAC,EAAE,CAACb,MAAM,CAAC,CAAC;;EAEZ;EACA;EACA;EACA,MAAMqB,cAAc,GAAGA,CAAA,KAAM;IAC3B5B,MAAM,CAAC6B,UAAU,CAAC,MAAM;MACtBrB,SAAS,CAAC,KAAK,CAAC;IAClB,CAAC,EAAE,CAAC,CAAC;EACP,CAAC;;EAED;EACA;EACA;EACA,MAAMsB,QAAQ,GAAGxC,WAAW,CAACuB,SAAS,CAACO,OAAO,CAAC;EAE/C,MAAMW,OAAO,GAAGhD,UAAU,CAAC,YAAY,EAAEsB,SAAS,CAAC;EAEnD,MAAM2B,cAAc,GAAGjD,UAAU,CAAC,mBAAmB,EAAE;IACrD,4BAA4B,EAAE0B;EAChC,CAAC,CAAC;EAEF,oBACEtB,OAAA,CAAAE,SAAA;IAAAe,QAAA,GACGb,MAAM,eAEPJ,OAAA,CAACH,SAAS;MAAAoB,QAAA,EACPG,MAAM,IAAIuB,QAAQ,iBACjB3C,OAAA,CAACF,OAAO;QACNgD,WAAW,EAAEL,cAAe;QAC5BM,cAAc,EAAEN;QAChB;QAAA;QACAO,WAAW,EAAE;QACb;QACA;QAAA;QACAC,SAAS,EAAE7B;QACX;QAAA;QACA8B,UAAU,EAAE;QACZ;QAAA;QACAC,oBAAoB,EAAE,KAAM;QAAAlC,QAAA,eAE5BjB,OAAA;UAAKkB,SAAS,EAAE0B,OAAQ;UAACQ,KAAK,EAAE;YAAE3C,GAAG,EAAE,GAAGkC,QAAQ,CAAClC,GAAG,IAAI;YAAEF,KAAK,EAAE,GAAGoC,QAAQ,CAACpC,KAAK;UAAK,CAAE;UAAA,GAAKgB,IAAI;UAAAN,QAAA,GACjGE,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,gBAAGnB,OAAA;YAAKkB,SAAS,EAAC,iBAAiB;YAAAD,QAAA,EAAEE;UAAM;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,GAAGrC,MAAM,EAC/FF,QAAQ,iBAAIjB,OAAA;YAAKkB,SAAS,EAAE2B,cAAe;YAAA5B,QAAA,EAAEA;UAAQ;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IACV;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA,eACZ,CAAC;AAEP,CAAC;AAAChC,EAAA,CAnGWT,UAAU;AAAA0C,EAAA,GAAV1C,UAAU;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}