{"ast":null,"code":"var _jsxFileName = \"/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/view/results/SearchResult.tsx\";\nimport { forwardRef } from \"react\";\nimport { VuiText, VuiTextColor, VuiSearchResult, truncateStart, truncateEnd } from \"../../ui\";\nimport \"./SearchResult.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Vectara provides a requested number of sentences/characters before/after relevant reference snippets.\n// This variable allows for controlling the length of the text actually rendered to the screen.\nconst CONTEXT_MAX_LENGTH = 200;\nexport const SearchResult = /*#__PURE__*/forwardRef(_c = ({\n  result,\n  position,\n  isSelected\n}, ref) => {\n  const url = result.document_metadata.url;\n  const title = result.document_metadata.title;\n  const {\n    pre,\n    text,\n    post\n  } = result.snippet;\n  return /*#__PURE__*/_jsxDEV(VuiSearchResult, {\n    ref: ref,\n    isSelected: isSelected,\n    result: {\n      title,\n      url,\n      snippet: {\n        pre: truncateStart(pre, CONTEXT_MAX_LENGTH),\n        text,\n        post: truncateEnd(post, CONTEXT_MAX_LENGTH)\n      }\n    },\n    position: position + 1,\n    subTitle: url && /*#__PURE__*/_jsxDEV(VuiText, {\n      size: \"s\",\n      className: \"searchResultSiteCategory\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(VuiTextColor, {\n          color: \"subdued\",\n          children: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n});\n_c2 = SearchResult;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchResult$forwardRef\");\n$RefreshReg$(_c2, \"SearchResult\");","map":{"version":3,"names":["forwardRef","VuiText","VuiTextColor","VuiSearchResult","truncateStart","truncateEnd","jsxDEV","_jsxDEV","CONTEXT_MAX_LENGTH","SearchResult","_c","result","position","isSelected","ref","url","document_metadata","title","pre","text","post","snippet","subTitle","size","className","children","color","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/view/results/SearchResult.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport { VuiText, VuiTextColor, VuiSearchResult, truncateStart, truncateEnd } from \"../../ui\";\nimport { SearchResultWithSnippet } from \"../types\";\nimport \"./SearchResult.scss\";\n\ntype Props = {\n  result: SearchResultWithSnippet;\n  position: number;\n  isSelected: boolean;\n};\n\n// Vectara provides a requested number of sentences/characters before/after relevant reference snippets.\n// This variable allows for controlling the length of the text actually rendered to the screen.\nconst CONTEXT_MAX_LENGTH = 200;\n\nexport const SearchResult = forwardRef<HTMLDivElement | null, Props>(({ result, position, isSelected }: Props, ref) => {\n  const url = result.document_metadata.url as string;\n  const title = result.document_metadata.title as string;\n  const { pre, text, post } = result.snippet;\n\n  return (\n    <VuiSearchResult\n      ref={ref}\n      isSelected={isSelected}\n      result={{\n        title,\n        url,\n        snippet: {\n          pre: truncateStart(pre, CONTEXT_MAX_LENGTH),\n          text,\n          post: truncateEnd(post, CONTEXT_MAX_LENGTH)\n        }\n      }}\n      position={position + 1}\n      subTitle={\n        url && (\n          <VuiText size=\"s\" className=\"searchResultSiteCategory\">\n            <p>\n              <VuiTextColor color=\"subdued\">{url}</VuiTextColor>\n            </p>\n          </VuiText>\n        )\n      }\n    />\n  );\n});\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,OAAO,EAAEC,YAAY,EAAEC,eAAe,EAAEC,aAAa,EAAEC,WAAW,QAAQ,UAAU;AAE7F,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ7B;AACA;AACA,MAAMC,kBAAkB,GAAG,GAAG;AAE9B,OAAO,MAAMC,YAAY,gBAAGT,UAAU,CAAAU,EAAA,GAA+BA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAkB,CAAC,EAAEC,GAAG,KAAK;EACrH,MAAMC,GAAG,GAAGJ,MAAM,CAACK,iBAAiB,CAACD,GAAa;EAClD,MAAME,KAAK,GAAGN,MAAM,CAACK,iBAAiB,CAACC,KAAe;EACtD,MAAM;IAAEC,GAAG;IAAEC,IAAI;IAAEC;EAAK,CAAC,GAAGT,MAAM,CAACU,OAAO;EAE1C,oBACEd,OAAA,CAACJ,eAAe;IACdW,GAAG,EAAEA,GAAI;IACTD,UAAU,EAAEA,UAAW;IACvBF,MAAM,EAAE;MACNM,KAAK;MACLF,GAAG;MACHM,OAAO,EAAE;QACPH,GAAG,EAAEd,aAAa,CAACc,GAAG,EAAEV,kBAAkB,CAAC;QAC3CW,IAAI;QACJC,IAAI,EAAEf,WAAW,CAACe,IAAI,EAAEZ,kBAAkB;MAC5C;IACF,CAAE;IACFI,QAAQ,EAAEA,QAAQ,GAAG,CAAE;IACvBU,QAAQ,EACNP,GAAG,iBACDR,OAAA,CAACN,OAAO;MAACsB,IAAI,EAAC,GAAG;MAACC,SAAS,EAAC,0BAA0B;MAAAC,QAAA,eACpDlB,OAAA;QAAAkB,QAAA,eACElB,OAAA,CAACL,YAAY;UAACwB,KAAK,EAAC,SAAS;UAAAD,QAAA,EAAEV;QAAG;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAEZ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEN,CAAC,CAAC;AAACC,GAAA,GA9BUtB,YAAY;AAAA,IAAAC,EAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}