{"ast":null,"code":"var _jsxFileName = \"/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/components/button/BaseButton.tsx\";\nimport { forwardRef } from \"react\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport { getTrackingProps } from \"../../utils/getTrackingProps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst alignToClassMap = {\n  left: \"vuiBaseButton--alignLeft\",\n  center: \"vuiBaseButton--alignCenter\",\n  right: \"vuiBaseButton--alignRight\"\n};\nexport const BaseButton = /*#__PURE__*/forwardRef(_c = ({\n  children,\n  icon,\n  iconSide = \"left\",\n  align = \"center\",\n  className,\n  size,\n  fullWidth,\n  onClick,\n  tabIndex,\n  isInert,\n  isDisabled,\n  href,\n  target,\n  track,\n  htmlFor,\n  isSubmit,\n  ...rest\n}, ref) => {\n  const classes = classNames(\"vuiBaseButton\", className, `vuiBaseButton--${size}`, alignToClassMap[align], {\n    \"vuiBaseButton-isInert\": isInert,\n    \"vuiBaseButton-isDisabled\": isDisabled,\n    \"vuiBaseButton--fullWidth\": fullWidth,\n    [`vuiBaseButton--${iconSide}`]: Boolean(icon) && Boolean(children)\n  });\n  const iconContainer = icon ? /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"vuiBaseButtonIconContainer\",\n    children: icon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 34\n  }, this) : null;\n\n  // This is useful for controlling other elements, e.g. creating an <input type=\"file\" />\n  // for uploading files and adding a button to trigger it.\n  if (htmlFor) {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: htmlFor,\n      className: classes,\n      tabIndex: tabIndex,\n      ...rest,\n      children: [iconContainer, children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this);\n  }\n  if (href) {\n    const wrapperClasses = classNames(\"vuiBaseButtonLinkWrapper\", {\n      \"vuiBaseButtonLinkWrapper--fullWidth\": fullWidth\n    });\n    return /*#__PURE__*/_jsxDEV(Link, {\n      className: wrapperClasses,\n      to: href,\n      onClick: onClick,\n      target: target,\n      tabIndex: tabIndex,\n      ...rest,\n      ...getTrackingProps(track),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes,\n        tabIndex: -1,\n        ref: ref,\n        children: [iconContainer, children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this);\n  }\n  const props = {\n    onClick,\n    tabIndex,\n    [\"type\"]: isSubmit ? \"submit\" : undefined,\n    ...rest\n  };\n  return (\n    /*#__PURE__*/\n    // @ts-expect-error HTMLButtonElement conflict with HTMLAnchorElement\n    _jsxDEV(\"button\", {\n      className: classes,\n      ...props,\n      ref: ref,\n      children: [iconContainer, children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  );\n});\n_c2 = BaseButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"BaseButton$forwardRef\");\n$RefreshReg$(_c2, \"BaseButton\");","map":{"version":3,"names":["forwardRef","classNames","Link","getTrackingProps","jsxDEV","_jsxDEV","alignToClassMap","left","center","right","BaseButton","_c","children","icon","iconSide","align","className","size","fullWidth","onClick","tabIndex","isInert","isDisabled","href","target","track","htmlFor","isSubmit","rest","ref","classes","Boolean","iconContainer","fileName","_jsxFileName","lineNumber","columnNumber","wrapperClasses","to","props","undefined","_c2","$RefreshReg$"],"sources":["/Users/syedali/POC/Create UI Threadneedle/columbia-threadneedle-demo/src/ui/components/button/BaseButton.tsx"],"sourcesContent":["import { ReactElement, ReactNode, forwardRef } from \"react\";\nimport classNames from \"classnames\";\nimport { Props as LinkProps } from \"../link/Link\";\nimport { Link } from \"react-router-dom\";\nimport { getTrackingProps } from \"../../utils/getTrackingProps\";\nimport { BUTTON_SIZE } from \"./types\";\n\nconst alignToClassMap = {\n  left: \"vuiBaseButton--alignLeft\",\n  center: \"vuiBaseButton--alignCenter\",\n  right: \"vuiBaseButton--alignRight\"\n};\n\nexport type Props = {\n  children?: ReactNode;\n  icon?: ReactElement | null;\n  iconSide?: \"left\" | \"right\";\n  align?: \"left\" | \"center\" | \"right\";\n  className?: string;\n  size?: (typeof BUTTON_SIZE)[number];\n  fullWidth?: boolean;\n  isSelected?: boolean;\n  isInert?: boolean;\n  isDisabled?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement | HTMLAnchorElement, MouseEvent>) => void;\n  href?: LinkProps[\"href\"];\n  target?: LinkProps[\"target\"];\n  track?: LinkProps[\"track\"];\n  htmlFor?: string;\n  tabIndex?: number;\n  title?: string;\n  isSubmit?: boolean;\n};\n\nexport const BaseButton = forwardRef<HTMLButtonElement | null, Props>(\n  (\n    {\n      children,\n      icon,\n      iconSide = \"left\",\n      align = \"center\",\n      className,\n      size,\n      fullWidth,\n      onClick,\n      tabIndex,\n      isInert,\n      isDisabled,\n      href,\n      target,\n      track,\n      htmlFor,\n      isSubmit,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const classes = classNames(\"vuiBaseButton\", className, `vuiBaseButton--${size}`, alignToClassMap[align], {\n      \"vuiBaseButton-isInert\": isInert,\n      \"vuiBaseButton-isDisabled\": isDisabled,\n      \"vuiBaseButton--fullWidth\": fullWidth,\n      [`vuiBaseButton--${iconSide}`]: Boolean(icon) && Boolean(children)\n    });\n\n    const iconContainer = icon ? <span className=\"vuiBaseButtonIconContainer\">{icon}</span> : null;\n\n    // This is useful for controlling other elements, e.g. creating an <input type=\"file\" />\n    // for uploading files and adding a button to trigger it.\n    if (htmlFor) {\n      return (\n        <label htmlFor={htmlFor} className={classes} tabIndex={tabIndex} {...rest}>\n          {iconContainer}\n          {children}\n        </label>\n      );\n    }\n\n    if (href) {\n      const wrapperClasses = classNames(\"vuiBaseButtonLinkWrapper\", {\n        \"vuiBaseButtonLinkWrapper--fullWidth\": fullWidth\n      });\n\n      return (\n        <Link\n          className={wrapperClasses}\n          to={href}\n          onClick={onClick}\n          target={target}\n          tabIndex={tabIndex}\n          {...rest}\n          {...getTrackingProps(track)}\n        >\n          {/* Wrap a button otherwise the flex layout breaks */}\n          <button className={classes} tabIndex={-1} ref={ref}>\n            {iconContainer}\n            {children}\n          </button>\n        </Link>\n      );\n    }\n\n    const props = {\n      onClick,\n      tabIndex,\n      [\"type\"]: isSubmit ? \"submit\" : undefined,\n      ...rest\n    };\n\n    return (\n      // @ts-expect-error HTMLButtonElement conflict with HTMLAnchorElement\n      <button className={classes} {...props} ref={ref}>\n        {iconContainer}\n        {children}\n      </button>\n    );\n  }\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}